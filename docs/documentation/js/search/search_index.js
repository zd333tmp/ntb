var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.5","fields":["title","body"],"fieldVectors":[["title/dependencies.html",[0,2.524,1,2.043]],["body/dependencies.html",[1,2.426,2,4.322,3,0.037,4,6.229,5,4.322,6,4.322,7,1.973,8,4.322,9,4.322,10,4.3,11,3.71,12,4.322,13,4.322,14,3.085,15,0.823,16,4.322,17,4.322,18,4.322,19,4.322,20,4.322,21,4.322,22,4.322,23,4.322,24,4.322,25,4.322,26,4.322,27,0.031,28,0.031]],["title/index.html",[29,2.524,30,0.652,31,0.179]],["body/index.html",[3,0.029,27,0.029,28,0.029,32,2.439,33,4.862,34,5.569,35,5.312,36,5.312,37,3.878,38,3.878,39,3.878,40,4.862,41,6.005,42,6.005,43,5.312,44,2.768,45,3.878,46,3.878,47,3.471,48,3.878,49,3.878,50,3.878,51,0.221,52,0.221,53,3.878,54,3.878,55,2.001,56,0.908,57,2.768,58,3.792,59,3.878,60,5.736,61,3.878,62,2.439,63,3.878,64,3.878,65,3.878,66,3.878,67,3.878,68,4.862,69,5.852,70,4.862,71,5.312,72,3.878,73,3.976,74,3.878,75,3.878,76,3.878,77,3.209,78,3.878,79,3.878,80,5.312,81,3.878,82,3.878,83,3.878,84,2.439,85,3.878]],["title/overview.html",[86,3.419]],["body/overview.html",[1,2.172,3,0.037,27,0.029,28,0.029,55,1.458,84,2.434,86,3.202,87,1.954,88,2.763,89,2.217,90,2.763,91,2.763,92,0.22,93,3.202,94,3.202,95,3.202,96,3.202,97,3.202,98,3.202,99,3.202,100,3.332,101,3.941,102,2.679,103,2.979,104,2.679,105,2.679,106,2.894,107,4.391,108,3.338,109,3.467,110,2.763,111,4.856,112,4.856,113,3.87,114,3.87,115,0.165,116,1.1]],["title/modules.html",[89,1.887]],["body/modules.html",[3,0.032,11,3.943,27,0.032,28,0.032,89,2.188,101,3.014,106,2.419,117,5.522,118,5.522,119,5.522]],["title/modules/AppModule.html",[89,1.381,101,1.903]],["body/modules/AppModule.html",[1,1.895,3,0.037,7,1.541,10,2.793,11,2.41,27,0.026,28,0.026,51,0.192,52,0.192,84,2.123,87,1.704,88,3.551,89,2.031,90,3.551,91,3.551,92,0.253,93,2.793,94,2.793,95,2.793,96,2.793,97,2.793,100,3.394,101,3.908,102,2.848,103,3.167,104,2.848,105,2.848,106,2.848,107,4.668,109,3.175,110,2.41,115,0.144,120,0.24,121,3.376,122,0.611,123,4.447,124,3.175,125,4.447,126,3.376,127,1.704,128,2.41,129,3.376,130,3.376,131,3.376,132,3.376,133,4.447,134,0.512,135,3.376,136,3.376,137,3.376,138,3.376,139,2.793,140,3.376,141,3.376,142,2.793,143,3.376]],["title/modules/AppStateModule.html",[89,1.381,106,1.527]],["body/modules/AppStateModule.html",[1,1.769,3,0.038,7,1.439,14,2.25,15,0.809,27,0.025,28,0.025,44,2.25,47,2.25,51,0.179,52,0.179,58,3.033,62,1.982,84,1.982,87,1.591,88,2.25,89,1.94,90,2.25,91,2.25,92,0.274,98,2.608,99,2.608,106,2.793,108,3.48,109,3.033,110,2.25,115,0.134,116,0.895,120,0.224,122,0.608,124,3.033,127,2.145,128,2.25,134,0.729,144,0.422,145,2.608,146,2.608,147,3.515,148,2.608,149,2.608,150,2.608,151,3.515,152,2.608,153,3.515,154,2.608,155,2.608,156,2.672,157,3.977,158,0.537,159,3.515,160,2.672,161,3.515,162,2.385,163,1.982,164,3.515,165,2.608,166,3.515,167,2.608,168,3.515,169,2.608,170,2.608,171,2.25,172,3.515,173,3.515,174,0.809,175,3.515,176,2.608,177,2.608,178,2.608,179,2.608,180,2.608,181,2.608,182,2.608,183,2.608,184,2.608,185,0.667,186,2.608,187,2.608,188,2.608,189,2.608,190,2.608,191,2.608,192,2.608,193,2.608,194,3.515,195,2.608,196,2.608]],["title/components/ErrorAlertComponent.html",[55,1.14,105,1.527]],["body/components/ErrorAlertComponent.html",[3,0.037,7,1.686,27,0.028,28,0.028,31,0.262,32,3.695,51,0.21,52,0.21,55,2.213,56,1.103,87,1.864,92,0.21,100,2.072,102,1.864,103,2.072,104,1.864,105,2.762,115,0.157,120,0.262,122,0.373,142,3.901,197,2.636,198,2.636,199,2.636,200,4.713,201,3.692,202,1.53,203,3.365,204,3.365,205,1.27,206,2.636,207,3.365,208,3.365,209,4.194,210,4.713,211,3.365,212,4.713,213,3.365,214,4.713,215,3.905,216,5.652,217,0.316,218,0.897,219,0.373,220,3.692,221,2.636,222,3.365,223,3.365,224,3.365,225,3.905,226,2.636,227,2.636,228,2.636,229,0.552,230,2.636,231,2.636,232,2.323,233,2.636,234,2.636]],["title/components/NotesListComponent.html",[55,1.14,102,1.527]],["body/components/NotesListComponent.html",[3,0.037,7,1.343,27,0.024,28,0.024,31,0.209,32,3.493,51,0.167,52,0.167,55,2.092,56,1.227,57,2.1,87,1.485,92,0.167,100,1.651,102,2.523,103,1.651,104,1.485,105,1.485,108,1.85,115,0.125,120,0.209,122,0.409,127,1.485,134,0.843,158,0.852,197,2.1,198,2.1,199,2.1,202,1.219,203,2.893,204,2.893,205,0.622,206,2.1,207,2.893,208,2.893,209,3.964,211,2.893,213,2.893,215,3.742,217,0.449,219,0.547,221,2.1,222,2.893,223,2.893,224,2.893,225,3.568,226,2.1,227,2.1,228,2.1,229,0.733,230,2.1,231,2.1,232,1.85,233,2.1,234,2.1,235,5.552,236,2.941,237,4.053,238,1.046,239,4.053,240,4.053,241,3.354,242,4.053,243,4.053,244,4.053,245,3.837,246,4.135,247,0.981,248,0.691,249,2.941,250,2.941,251,2.434,252,3.837,253,2.941,254,4.053,255,2.941,256,1.318,257,1.318,258,4.484,259,0.857,260,4.053,261,2.941,262,3.354,263,4.053,264,2.941,265,2.941,266,4.053,267,4.053,268,4.053,269,2.941,270,4.053]],["title/components/SearchBarComponent.html",[55,1.14,104,1.527]],["body/components/SearchBarComponent.html",[3,0.037,7,1.389,27,0.024,28,0.024,31,0.216,32,3.524,51,0.173,52,0.173,55,2.111,56,1.105,57,2.172,87,1.536,92,0.173,100,1.708,102,1.536,103,1.708,104,2.56,105,1.536,115,0.129,120,0.216,122,0.307,139,4.39,174,0.579,197,2.172,198,2.172,199,2.172,202,1.261,203,2.961,205,0.644,206,2.172,207,2.961,208,2.961,209,4,211,2.961,213,2.961,215,3.619,217,0.455,218,0.79,219,0.512,221,2.172,222,2.961,223,2.961,224,2.961,225,3.619,226,2.172,227,2.172,228,2.172,229,0.486,230,2.172,231,2.172,232,3.638,233,3.37,234,2.172,241,3.433,246,4.195,248,0.707,251,2.518,252,3.906,256,0.864,257,0.864,258,4.53,262,3.433,271,5.305,272,3.043,273,4.148,274,4.148,275,4.148,276,4.148,277,4.148,278,1.071,279,4.148,280,4.148,281,4.148,282,4.148,283,4.148,284,4.148,285,4.148,286,4.148,287,5.069,288,4.148,289,3.37,290,4.72,291,3.043,292,3.043,293,3.043,294,4.148,295,4.72,296,3.043,297,4.148,298,3.043,299,3.043,300,3.043,301,3.043,302,4.148,303,3.043,304,3.043,305,3.043]],["title/classes/AddNote.html",[115,0.129,306,0.708]],["body/classes/AddNote.html",[3,0.038,15,0.461,27,0.021,28,0.021,30,1.076,31,0.172,51,0.138,52,0.138,92,0.348,115,0.245,120,0.172,122,0.357,134,0.536,144,0.473,158,0.974,174,1.087,185,0.512,205,0.881,217,0.508,218,0.793,219,0.245,229,0.72,238,0.625,247,0.747,248,0.413,259,0.747,278,0.625,306,0.975,307,0.826,308,0.625,309,1.489,310,1.501,311,0.536,312,0.991,313,0.625,314,1.184,315,2.421,316,0.872,317,0.567,318,0.567,319,1.003,320,1.076,321,1.003,322,1.184,323,1.003,324,1.003,325,1.003,326,0.625,327,1.003,328,1.076,329,1.003,330,1.003,331,1.003,332,1.184,333,1.003,334,1.003,335,0.826,336,0.826,337,1.416,338,1.416,339,0.826,340,1.076,341,1.184,342,1.184,343,0.826,344,0.688,345,0.911,346,0.826,347,0.826,348,0.826,349,0.826,350,1.003,351,0.826,352,0.826,353,0.625]],["title/classes/DeleteNoteError.html",[115,0.129,352,0.708]],["body/classes/DeleteNoteError.html",[3,0.038,15,0.442,27,0.02,28,0.02,30,1.05,31,0.165,51,0.132,52,0.132,56,0.543,92,0.347,115,0.243,120,0.165,122,0.346,134,0.681,144,0.601,158,0.966,174,1.078,185,0.491,205,0.86,217,0.518,218,0.774,219,0.411,229,0.717,238,0.599,247,0.724,248,0.396,256,0.66,257,0.66,259,0.724,278,0.599,306,0.801,307,1.05,308,0.599,309,1.477,310,1.49,311,0.52,312,0.984,313,0.599,314,0.973,316,0.855,317,0.543,318,0.543,319,0.973,320,1.05,321,0.973,322,1.155,323,0.973,324,0.973,325,0.973,326,0.599,327,0.973,328,1.05,329,0.973,330,0.973,331,0.973,332,1.155,333,0.973,334,1.155,335,0.801,336,0.801,337,1.401,338,1.477,339,0.801,340,1.05,341,1.155,342,1.155,343,0.801,344,0.66,345,0.884,346,0.801,347,0.801,348,0.801,349,0.801,350,0.973,351,0.801,352,0.952,353,0.599,354,1.174,355,0.796,356,0.796,357,1.402,358,3.423,359,2.321]],["title/classes/DeleteNoteStart.html",[115,0.129,349,0.708]],["body/classes/DeleteNoteStart.html",[3,0.038,15,0.442,27,0.02,28,0.02,30,1.05,31,0.165,51,0.132,52,0.132,56,0.543,92,0.347,115,0.243,120,0.165,122,0.346,134,0.681,144,0.601,158,0.966,174,1.078,185,0.491,205,0.86,217,0.518,218,0.774,219,0.411,229,0.717,238,0.599,247,0.724,248,0.396,256,0.66,257,0.66,259,0.724,278,0.599,306,0.801,307,1.05,308,0.599,309,1.477,310,1.49,311,0.52,312,0.984,313,0.599,314,0.973,316,0.855,317,0.543,318,0.543,319,0.973,320,1.05,321,0.973,322,1.155,323,0.973,324,0.973,325,0.973,326,0.599,327,0.973,328,1.05,329,0.973,330,0.973,331,1.155,332,1.155,333,0.973,334,0.973,335,0.801,336,0.801,337,1.401,338,1.477,339,0.801,340,1.05,341,1.155,342,1.155,343,0.801,344,0.66,345,0.884,346,0.801,347,0.801,348,0.801,349,0.952,350,0.973,351,0.801,352,0.801,353,0.599,354,1.174,355,0.796,356,0.796,357,1.402,360,3.423,361,2.321]],["title/classes/DeleteNoteSuccess.html",[115,0.129,351,0.708]],["body/classes/DeleteNoteSuccess.html",[3,0.038,15,0.461,27,0.021,28,0.021,30,1.076,31,0.172,51,0.138,52,0.138,92,0.348,115,0.245,120,0.172,122,0.357,134,0.536,144,0.473,158,0.974,174,1.087,185,0.512,205,0.881,217,0.508,218,0.793,219,0.245,229,0.72,238,0.625,247,0.747,248,0.413,259,0.747,278,0.625,306,0.826,307,0.826,308,0.625,309,1.489,310,1.501,311,0.536,312,0.991,313,0.625,314,1.003,316,0.872,317,0.567,318,0.567,319,1.003,320,1.076,321,1.003,322,1.184,323,1.003,324,1.003,325,1.003,326,0.625,327,1.003,328,1.076,329,1.003,330,1.003,331,1.003,332,1.184,333,1.184,334,1.003,335,0.826,336,0.826,337,1.416,338,1.416,339,0.826,340,1.076,341,1.184,342,1.184,343,0.826,344,0.688,345,0.911,346,0.826,347,0.826,348,0.826,349,0.826,350,1.003,351,0.975,352,0.826,353,0.625,362,2.421]],["title/classes/LoadNotesError.html",[115,0.129,339,0.708]],["body/classes/LoadNotesError.html",[3,0.038,15,0.442,27,0.02,28,0.02,30,1.05,31,0.165,51,0.132,52,0.132,56,0.543,92,0.347,115,0.243,120,0.165,122,0.346,134,0.681,144,0.601,158,0.966,174,1.078,185,0.491,205,0.86,217,0.518,218,0.774,219,0.411,229,0.717,238,0.599,247,0.724,248,0.396,256,0.66,257,0.66,259,0.724,278,0.599,306,0.801,307,1.05,308,0.599,309,1.477,310,1.49,311,0.52,312,0.984,313,0.599,314,0.973,316,0.855,317,0.543,318,0.543,319,0.973,320,1.05,321,0.973,322,1.155,323,1.155,324,0.973,325,0.973,326,0.599,327,0.973,328,1.05,329,0.973,330,0.973,331,0.973,332,1.155,333,0.973,334,0.973,335,0.801,336,0.801,337,1.401,338,1.477,339,0.952,340,1.05,341,1.155,342,1.155,343,0.801,344,0.66,345,0.884,346,0.801,347,0.801,348,0.801,349,0.801,350,0.973,351,0.801,352,0.801,353,0.599,354,1.174,355,0.796,356,0.796,357,1.402,363,3.423,364,2.321]],["title/classes/LoadNotesStart.html",[115,0.129,335,0.708]],["body/classes/LoadNotesStart.html",[3,0.038,15,0.461,27,0.021,28,0.021,30,1.076,31,0.172,51,0.138,52,0.138,92,0.348,115,0.245,120,0.172,122,0.357,134,0.536,144,0.473,158,0.974,174,1.087,185,0.512,205,0.881,217,0.508,218,0.793,219,0.245,229,0.72,238,0.625,247,0.747,248,0.413,259,0.747,278,0.625,306,0.826,307,0.826,308,0.625,309,1.489,310,1.501,311,0.536,312,0.991,313,0.625,314,1.003,316,0.872,317,0.567,318,0.567,319,1.184,320,1.076,321,1.003,322,1.184,323,1.003,324,1.003,325,1.003,326,0.625,327,1.003,328,1.076,329,1.003,330,1.003,331,1.003,332,1.184,333,1.003,334,1.003,335,0.975,336,0.826,337,1.416,338,1.416,339,0.826,340,1.076,341,1.184,342,1.184,343,0.826,344,0.688,345,0.911,346,0.826,347,0.826,348,0.826,349,0.826,350,1.003,351,0.826,352,0.826,353,0.625,365,2.421]],["title/classes/LoadNotesSuccess.html",[115,0.129,336,0.708]],["body/classes/LoadNotesSuccess.html",[3,0.038,15,0.442,27,0.02,28,0.02,30,1.05,31,0.165,51,0.132,52,0.132,56,0.543,92,0.347,115,0.243,120,0.165,122,0.346,134,0.681,144,0.601,158,0.966,174,1.078,185,0.491,205,0.86,217,0.518,218,0.774,219,0.411,229,0.717,238,0.599,247,0.724,248,0.396,256,0.66,257,0.66,259,0.724,278,0.599,306,0.801,307,1.05,308,0.599,309,1.477,310,1.49,311,0.52,312,0.984,313,0.599,314,0.973,316,0.855,317,0.543,318,0.543,319,0.973,320,1.05,321,1.155,322,1.155,323,0.973,324,0.973,325,0.973,326,0.599,327,0.973,328,1.05,329,0.973,330,0.973,331,0.973,332,1.155,333,0.973,334,0.973,335,0.801,336,0.952,337,1.401,338,1.477,339,0.801,340,1.05,341,1.155,342,1.155,343,0.801,344,0.66,345,0.884,346,0.801,347,0.801,348,0.801,349,0.801,350,0.973,351,0.801,352,0.801,353,0.599,354,1.174,355,0.796,356,0.796,357,1.402,366,3.423,367,2.321]],["title/classes/SaveNoteError.html",[115,0.129,348,0.708]],["body/classes/SaveNoteError.html",[3,0.038,15,0.442,27,0.02,28,0.02,30,1.05,31,0.165,51,0.132,52,0.132,56,0.543,92,0.347,115,0.243,120,0.165,122,0.346,134,0.681,144,0.601,158,0.966,174,1.078,185,0.491,205,0.86,217,0.518,218,0.774,219,0.411,229,0.717,238,0.599,247,0.724,248,0.396,256,0.66,257,0.66,259,0.724,278,0.599,306,0.801,307,1.05,308,0.599,309,1.477,310,1.49,311,0.52,312,0.984,313,0.599,314,0.973,316,0.855,317,0.543,318,0.543,319,0.973,320,1.05,321,0.973,322,1.155,323,0.973,324,0.973,325,0.973,326,0.599,327,0.973,328,1.05,329,0.973,330,1.155,331,0.973,332,1.155,333,0.973,334,0.973,335,0.801,336,0.801,337,1.401,338,1.477,339,0.801,340,1.05,341,1.155,342,1.155,343,0.801,344,0.66,345,0.884,346,0.801,347,0.801,348,0.952,349,0.801,350,0.973,351,0.801,352,0.801,353,0.599,354,1.174,355,0.796,356,0.796,357,1.402,368,3.423,369,2.321]],["title/classes/SaveNoteStart.html",[115,0.129,346,0.708]],["body/classes/SaveNoteStart.html",[3,0.038,15,0.442,27,0.02,28,0.02,30,1.05,31,0.165,51,0.132,52,0.132,56,0.543,92,0.347,115,0.243,120,0.165,122,0.346,134,0.681,144,0.601,158,0.966,174,1.078,185,0.491,205,0.86,217,0.518,218,0.774,219,0.411,229,0.717,238,0.599,247,0.724,248,0.396,256,0.66,257,0.66,259,0.724,278,0.599,306,0.801,307,1.05,308,0.599,309,1.477,310,1.49,311,0.52,312,0.984,313,0.599,314,0.973,316,0.855,317,0.543,318,0.543,319,0.973,320,1.05,321,0.973,322,1.155,323,0.973,324,0.973,325,0.973,326,0.599,327,1.155,328,1.05,329,0.973,330,0.973,331,0.973,332,1.155,333,0.973,334,0.973,335,0.801,336,0.801,337,1.401,338,1.477,339,0.801,340,1.05,341,1.155,342,1.155,343,0.801,344,0.66,345,0.884,346,0.952,347,0.801,348,0.801,349,0.801,350,0.973,351,0.801,352,0.801,353,0.599,354,1.174,355,0.796,356,0.796,357,1.402,370,3.423,371,2.321]],["title/classes/SaveNoteSuccess.html",[115,0.129,347,0.708]],["body/classes/SaveNoteSuccess.html",[3,0.038,15,0.442,27,0.02,28,0.02,30,1.05,31,0.165,51,0.132,52,0.132,56,0.543,92,0.347,115,0.243,120,0.165,122,0.346,134,0.681,144,0.601,158,0.966,174,1.078,185,0.491,205,0.86,217,0.518,218,0.774,219,0.411,229,0.717,238,0.599,247,0.724,248,0.396,256,0.66,257,0.66,259,0.724,278,0.599,306,0.801,307,1.05,308,0.599,309,1.477,310,1.49,311,0.52,312,0.984,313,0.599,314,0.973,316,0.855,317,0.543,318,0.543,319,0.973,320,1.05,321,0.973,322,1.155,323,0.973,324,0.973,325,0.973,326,0.599,327,0.973,328,1.05,329,1.155,330,0.973,331,0.973,332,1.155,333,0.973,334,0.973,335,0.801,336,0.801,337,1.401,338,1.477,339,0.801,340,1.05,341,1.155,342,1.155,343,0.801,344,0.66,345,0.884,346,0.801,347,0.952,348,0.801,349,0.801,350,0.973,351,0.801,352,0.801,353,0.599,354,1.174,355,0.796,356,0.796,357,1.402,372,3.423,373,2.321]],["title/classes/SelectNote.html",[115,0.129,247,0.64]],["body/classes/SelectNote.html",[3,0.038,15,0.442,27,0.02,28,0.02,30,1.05,31,0.165,51,0.132,52,0.132,56,0.543,92,0.347,115,0.243,120,0.165,122,0.346,134,0.681,144,0.601,158,0.966,174,1.078,185,0.491,205,0.86,217,0.518,218,0.774,219,0.411,229,0.717,238,0.599,247,0.86,248,0.396,256,0.66,257,0.66,259,0.724,278,0.599,306,0.801,307,1.05,308,0.599,309,1.477,310,1.49,311,0.52,312,0.984,313,0.599,314,0.973,316,0.855,317,0.543,318,0.543,319,0.973,320,1.05,321,0.973,322,1.155,323,0.973,324,1.155,325,0.973,326,0.599,327,0.973,328,1.05,329,0.973,330,0.973,331,0.973,332,1.155,333,0.973,334,0.973,335,0.801,336,0.801,337,1.401,338,1.477,339,0.801,340,1.05,341,1.155,342,1.155,343,0.801,344,0.66,345,0.884,346,0.801,347,0.801,348,0.801,349,0.801,350,0.973,351,0.801,352,0.801,353,0.599,354,1.174,355,0.796,356,0.796,357,1.402,374,3.423,375,2.321]],["title/classes/UpdateNote.html",[115,0.129,343,0.708]],["body/classes/UpdateNote.html",[3,0.038,15,0.442,27,0.02,28,0.02,30,1.05,31,0.165,51,0.132,52,0.132,56,0.543,92,0.347,115,0.243,120,0.165,122,0.346,134,0.681,144,0.601,158,0.966,174,1.078,185,0.491,205,0.86,217,0.518,218,0.774,219,0.411,229,0.717,238,0.599,247,0.724,248,0.396,256,0.66,257,0.66,259,0.724,278,0.599,306,0.801,307,1.05,308,0.599,309,1.477,310,1.49,311,0.52,312,0.984,313,0.599,314,0.973,316,0.855,317,0.543,318,0.543,319,0.973,320,1.05,321,0.973,322,1.155,323,0.973,324,0.973,325,1.155,326,0.599,327,0.973,328,1.05,329,0.973,330,0.973,331,0.973,332,1.155,333,0.973,334,0.973,335,0.801,336,0.801,337,1.401,338,1.477,339,0.801,340,1.05,341,1.155,342,1.155,343,0.952,344,0.66,345,0.884,346,0.801,347,0.801,348,0.801,349,0.801,350,0.973,351,0.801,352,0.801,353,0.599,354,1.174,355,0.796,356,0.796,357,1.402,376,3.423,377,2.321]],["title/classes/UpdateSearchByKeywords.html",[115,0.129,378,2.159]],["body/classes/UpdateSearchByKeywords.html",[3,0.037,15,0.741,27,0.029,28,0.029,31,0.276,51,0.222,52,0.222,56,0.911,92,0.303,115,0.207,120,0.276,122,0.393,144,0.747,162,3.131,163,2.45,174,0.741,185,0.824,217,0.526,219,0.538,232,3.067,248,0.664,256,1.106,257,1.106,289,2.78,309,1.258,310,1.374,311,0.74,312,0.908,313,1.005,326,1.005,337,1.005,338,1.483,354,1.672,355,1.336,356,1.336,357,1.742,378,3.799,379,3.982,380,3.223,381,4.875,382,3.894,383,5.322,384,3.223]],["title/interfaces/AppState.html",[116,0.859,171,2.159]],["body/interfaces/AppState.html",[3,0.038,7,1.484,14,2.321,15,0.826,27,0.025,28,0.025,31,0.231,44,2.321,47,3.097,51,0.185,52,0.185,58,3.097,62,2.045,92,0.247,106,1.642,108,2.729,115,0.138,116,1.233,120,0.231,122,0.607,124,3.097,127,2.465,128,3.485,134,0.741,144,0.654,145,2.69,146,2.69,147,3.59,148,2.69,149,2.69,150,2.69,151,3.59,152,2.69,153,3.59,154,2.69,155,2.69,156,3.276,157,4.04,158,0.554,159,3.59,160,3.276,161,3.59,162,2.435,163,2.045,164,3.59,165,2.69,166,3.59,167,2.69,168,3.59,169,2.69,170,3.59,171,3.097,172,4.49,173,4.49,174,0.826,175,3.59,176,2.69,177,2.69,178,2.69,179,2.69,180,2.69,181,2.69,182,2.69,183,2.69,184,2.69,185,0.688,186,2.69,187,2.69,188,2.69,189,2.69,190,2.69,191,2.69,192,2.69,193,2.69,194,3.59,195,2.69,196,2.69,202,1.347,217,0.372,219,0.438,311,0.658,385,3.251,386,3.251]],["title/interfaces/Note.html",[116,0.859,229,0.354]],["body/interfaces/Note.html",[3,0.037,27,0.029,28,0.029,31,0.284,51,0.227,52,0.227,55,1.866,73,3.536,77,4.099,92,0.227,116,1.407,120,0.284,122,0.404,144,0.664,202,1.655,217,0.342,219,0.404,229,0.69,259,1.139,311,0.895,312,0.918,316,1.025,317,0.935,318,0.935,328,1.279,387,3.995,388,5.628,389,4.953,390,4.953,391,4.953,392,4.953,393,4.953,394,3.536,395,3.536,396,4.953,397,4.657,398,3.995,399,4.953,400,4.099]],["title/interfaces/NotesListState.html",[116,0.859,156,1.903]],["body/interfaces/NotesListState.html",[3,0.037,27,0.026,28,0.026,31,0.239,51,0.191,52,0.191,92,0.191,116,1.261,120,0.239,122,0.34,127,2.24,134,0.885,144,0.782,156,2.791,158,1.016,202,1.394,217,0.514,218,1.111,219,0.581,229,0.52,245,4.368,259,1.248,307,1.365,311,0.801,312,1.006,316,0.945,317,0.787,318,0.787,320,1.363,340,1.363,357,1.649,394,3.167,395,3.167,397,4.368,401,2.783,402,3.671,403,3.167,404,4.437,405,3.671,406,5.279,407,5.279,408,5.279,409,3.363,410,3.363,411,3.363,412,3.363,413,2.783,414,3.363,415,3.363,416,3.671]],["title/interfaces/RawNote.html",[116,0.859,316,0.576]],["body/interfaces/RawNote.html",[3,0.036,27,0.028,28,0.028,31,0.274,51,0.219,52,0.219,62,2.424,73,2.751,92,0.219,116,1.376,120,0.274,202,1.597,217,0.491,218,1.182,219,0.578,229,0.567,248,0.903,289,3.967,311,0.804,312,0.996,316,0.922,394,2.751,395,2.751,400,3.189,403,2.751,416,4.598,417,5.843,418,3.854,419,3.854,420,3.854,421,3.854,422,5.556,423,5.556,424,5.556,425,3.854,426,3.854,427,3.854,428,3.854,429,3.854,430,4.843,431,4.843,432,4.843]],["title/interfaces/SearchParamsState.html",[116,0.859,160,1.903]],["body/interfaces/SearchParamsState.html",[3,0.035,27,0.03,28,0.03,31,0.306,51,0.245,52,0.245,92,0.245,116,1.474,120,0.306,127,2.62,144,0.695,158,0.735,160,3.265,162,2.913,163,3.265,202,1.786,204,3.078,217,0.369,219,0.436,229,0.505,248,0.949,311,0.845,312,0.735,379,3.705,384,4.781,401,3.568,402,3.568,403,3.078,405,3.568,413,3.568,433,4.312,434,5.189,435,4.312,436,4.312,437,4.312,438,4.312,439,4.312,440,4.312]],["title/miscellaneous/typealiases.html",[441,2.089,442,3.639]],["body/miscellaneous/typealiases.html",[3,0.037,27,0.031,28,0.031,31,0.316,134,0.676,144,0.709,162,2.502,217,0.382,247,0.943,306,1.043,307,1.043,308,1.151,335,1.043,336,1.043,339,1.043,343,1.043,345,1.458,346,1.043,347,1.043,348,1.043,349,1.043,351,1.043,352,1.043,353,1.151,378,3.182,379,3.182,380,3.688,441,3.688,443,4.457]]],"invertedIndex":[["",{"_index":3,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"modules.html":{},"modules/AppModule.html":{},"modules/AppStateModule.html":{},"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{},"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{},"interfaces/AppState.html":{},"interfaces/Note.html":{},"interfaces/NotesListState.html":{},"interfaces/RawNote.html":{},"interfaces/SearchParamsState.html":{},"miscellaneous/typealiases.html":{}}}],["0.5.3",{"_index":20,"title":{},"body":{"dependencies.html":{}}}],["0.8.14",{"_index":26,"title":{},"body":{"dependencies.html":{}}}],["1.0.2",{"_index":22,"title":{},"body":{"dependencies.html":{}}}],["1.2.4",{"_index":38,"title":{},"body":{"index.html":{}}}],["13",{"_index":114,"title":{},"body":{"overview.html":{}}}],["2",{"_index":111,"title":{},"body":{"overview.html":{}}}],["2.4.1",{"_index":18,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":4,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":112,"title":{},"body":{"overview.html":{}}}],["5.4.1",{"_index":24,"title":{},"body":{"dependencies.html":{}}}],["action",{"_index":310,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{}}}],["actionreducermap",{"_index":147,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["actual_compon",{"_index":234,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["add",{"_index":278,"title":{},"body":{"components/SearchBarComponent.html":{},"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{}}}],["add_not",{"_index":314,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{}}}],["addnot",{"_index":306,"title":{"classes/AddNote.html":{}},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"miscellaneous/typealiases.html":{}}}],["ahead",{"_index":279,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["alert",{"_index":210,"title":{},"body":{"components/ErrorAlertComponent.html":{}}}],["alert'},{'nam",{"_index":228,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["alert.compon",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["alert.component.html",{"_index":214,"title":{},"body":{"components/ErrorAlertComponent.html":{}}}],["alert.component.scss",{"_index":212,"title":{},"body":{"components/ErrorAlertComponent.html":{}}}],["alert.component.t",{"_index":201,"title":{},"body":{"components/ErrorAlertComponent.html":{}}}],["alert.component.ts:13",{"_index":220,"title":{},"body":{"components/ErrorAlertComponent.html":{}}}],["alert/error",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"components/ErrorAlertComponent.html":{}}}],["alias",{"_index":443,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular",{"_index":35,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":2,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":5,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compil",{"_index":6,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":7,"title":{},"body":{"dependencies.html":{},"modules/AppModule.html":{},"modules/AppStateModule.html":{},"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{},"interfaces/AppState.html":{}}}],["angular/form",{"_index":8,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":9,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":10,"title":{},"body":{"dependencies.html":{},"modules/AppModule.html":{}}}],["angular/rout",{"_index":13,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":47,"title":{},"body":{"index.html":{},"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["app.compon",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":100,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{},"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["appmodul",{"_index":101,"title":{"modules/AppModule.html":{}},"body":{"overview.html":{},"modules.html":{},"modules/AppModule.html":{}}}],["appstat",{"_index":171,"title":{"interfaces/AppState.html":{}},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["appstatemodul",{"_index":106,"title":{"modules/AppStateModule.html":{}},"body":{"overview.html":{},"modules.html":{},"modules/AppModule.html":{},"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["array",{"_index":248,"title":{},"body":{"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{},"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{},"interfaces/RawNote.html":{},"interfaces/SearchParamsState.html":{}}}],["artifact",{"_index":61,"title":{},"body":{"index.html":{}}}],["assembl",{"_index":186,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["automat",{"_index":48,"title":{},"body":{"index.html":{}}}],["avoid",{"_index":190,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["back",{"_index":400,"title":{},"body":{"interfaces/Note.html":{},"interfaces/RawNote.html":{}}}],["bar",{"_index":233,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["bar.compon",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":286,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.scss",{"_index":285,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.t",{"_index":272,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.ts:15",{"_index":291,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.ts:16",{"_index":292,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.ts:18",{"_index":293,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.ts:25",{"_index":296,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar/search",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"components/SearchBarComponent.html":{}}}],["befor",{"_index":76,"title":{},"body":{"index.html":{}}}],["below",{"_index":181,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["boolean",{"_index":259,"title":{},"body":{"components/NotesListComponent.html":{},"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"interfaces/Note.html":{},"interfaces/NotesListState.html":{}}}],["bootstrap",{"_index":90,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{},"modules/AppStateModule.html":{}}}],["brows",{"_index":119,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":11,"title":{},"body":{"dependencies.html":{},"modules.html":{},"modules/AppModule.html":{}}}],["browsermodul",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":60,"title":{},"body":{"index.html":{}}}],["bundl",{"_index":187,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["caption",{"_index":422,"title":{},"body":{"interfaces/RawNote.html":{}}}],["care",{"_index":274,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["chang",{"_index":50,"title":{},"body":{"index.html":{}}}],["changedetect",{"_index":207,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["changedetectionstrategi",{"_index":221,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":208,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["check",{"_index":83,"title":{},"body":{"index.html":{}}}],["chip",{"_index":284,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["class",{"_index":115,"title":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{}},"body":{"overview.html":{},"modules/AppModule.html":{},"modules/AppStateModule.html":{},"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{},"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{},"interfaces/AppState.html":{}}}],["cli",{"_index":36,"title":{},"body":{"index.html":{}}}],["cluster_appmodul",{"_index":93,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{}}}],["cluster_appmodule_bootstrap",{"_index":96,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{}}}],["cluster_appmodule_declar",{"_index":94,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{}}}],["cluster_appmodule_import",{"_index":95,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{}}}],["cluster_appmodule_provid",{"_index":97,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{}}}],["cluster_appstatemodul",{"_index":98,"title":{},"body":{"overview.html":{},"modules/AppStateModule.html":{}}}],["cluster_appstatemodule_import",{"_index":99,"title":{},"body":{"overview.html":{},"modules/AppStateModule.html":{}}}],["code",{"_index":53,"title":{},"body":{"index.html":{}}}],["compon",{"_index":55,"title":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}},"body":{"index.html":{},"overview.html":{},"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{},"interfaces/Note.html":{}}}],["component_templ",{"_index":226,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["components/error",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["components/not",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["components/search",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["compos",{"_index":439,"title":{},"body":{"interfaces/SearchParamsState.html":{}}}],["connector.servic",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":174,"title":{},"body":{"modules/AppStateModule.html":{},"components/SearchBarComponent.html":{},"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{},"interfaces/AppState.html":{}}}],["constructor",{"_index":355,"title":{},"body":{"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{}}}],["constructor(payload",{"_index":356,"title":{},"body":{"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{}}}],["constructor(publ",{"_index":337,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{}}}],["contain",{"_index":402,"title":{},"body":{"interfaces/NotesListState.html":{},"interfaces/SearchParamsState.html":{}}}],["conveni",{"_index":391,"title":{},"body":{"interfaces/Note.html":{}}}],["convert",{"_index":281,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["core",{"_index":16,"title":{},"body":{"dependencies.html":{}}}],["data",{"_index":403,"title":{},"body":{"interfaces/NotesListState.html":{},"interfaces/RawNote.html":{},"interfaces/SearchParamsState.html":{}}}],["declar",{"_index":88,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{},"modules/AppStateModule.html":{}}}],["dedic",{"_index":438,"title":{},"body":{"interfaces/SearchParamsState.html":{}}}],["default",{"_index":313,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{}}}],["defin",{"_index":219,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{},"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{},"interfaces/AppState.html":{},"interfaces/Note.html":{},"interfaces/NotesListState.html":{},"interfaces/RawNote.html":{},"interfaces/SearchParamsState.html":{}}}],["delet",{"_index":332,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{}}}],["delete_note_error",{"_index":334,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{}}}],["delete_note_start",{"_index":331,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{}}}],["delete_note_success",{"_index":333,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{}}}],["deletenoteerror",{"_index":352,"title":{"classes/DeleteNoteError.html":{}},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"miscellaneous/typealiases.html":{}}}],["deletenotestart",{"_index":349,"title":{"classes/DeleteNoteStart.html":{}},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"miscellaneous/typealiases.html":{}}}],["deletenotesuccess",{"_index":351,"title":{"classes/DeleteNoteSuccess.html":{}},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"miscellaneous/typealiases.html":{}}}],["depend",{"_index":1,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{},"modules/AppModule.html":{},"modules/AppStateModule.html":{}}}],["descript",{"_index":202,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{},"interfaces/AppState.html":{},"interfaces/Note.html":{},"interfaces/NotesListState.html":{},"interfaces/RawNote.html":{},"interfaces/SearchParamsState.html":{}}}],["details'},{'nam",{"_index":230,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["details.compon",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["details/not",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["dev",{"_index":44,"title":{},"body":{"index.html":{},"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["develop",{"_index":39,"title":{},"body":{"index.html":{}}}],["devtool",{"_index":150,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["direct",{"_index":224,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["directive|pipe|service|class|modul",{"_index":59,"title":{},"body":{"index.html":{}}}],["directori",{"_index":64,"title":{},"body":{"index.html":{}}}],["dist",{"_index":63,"title":{},"body":{"index.html":{}}}],["dom",{"_index":198,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["due",{"_index":435,"title":{},"body":{"interfaces/SearchParamsState.html":{}}}],["dumb",{"_index":203,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["dynam",{"_index":12,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":74,"title":{},"body":{"index.html":{}}}],["effect",{"_index":176,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["effectsmodul",{"_index":148,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["effectsmodule.forroot(effect",{"_index":196,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["element",{"_index":223,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["end",{"_index":73,"title":{},"body":{"index.html":{},"interfaces/Note.html":{},"interfaces/RawNote.html":{}}}],["enter",{"_index":282,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["environ",{"_index":154,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["environment.product",{"_index":194,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["environments/environ",{"_index":155,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["equal",{"_index":178,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["error",{"_index":205,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{},"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{}}}],["erroralertcompon",{"_index":105,"title":{"components/ErrorAlertComponent.html":{}},"body":{"overview.html":{},"modules/AppModule.html":{},"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["errormessag",{"_index":340,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"interfaces/NotesListState.html":{}}}],["event",{"_index":251,"title":{},"body":{"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["eventemitt",{"_index":252,"title":{},"body":{"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["execut",{"_index":70,"title":{},"body":{"index.html":{}}}],["export",{"_index":92,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{},"modules/AppStateModule.html":{},"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{},"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{},"interfaces/AppState.html":{},"interfaces/Note.html":{},"interfaces/NotesListState.html":{},"interfaces/RawNote.html":{},"interfaces/SearchParamsState.html":{}}}],["extend",{"_index":396,"title":{},"body":{"interfaces/Note.html":{}}}],["fals",{"_index":108,"title":{},"body":{"overview.html":{},"modules/AppStateModule.html":{},"components/NotesListComponent.html":{},"interfaces/AppState.html":{}}}],["file",{"_index":52,"title":{},"body":{"index.html":{},"modules/AppModule.html":{},"modules/AppStateModule.html":{},"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{},"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{},"interfaces/AppState.html":{},"interfaces/Note.html":{},"interfaces/NotesListState.html":{},"interfaces/RawNote.html":{},"interfaces/SearchParamsState.html":{}}}],["flag",{"_index":66,"title":{},"body":{"index.html":{}}}],["flow",{"_index":275,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["freez",{"_index":153,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["function",{"_index":280,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["further",{"_index":79,"title":{},"body":{"index.html":{}}}],["gener",{"_index":34,"title":{},"body":{"index.html":{}}}],["get",{"_index":29,"title":{"index.html":{}},"body":{}}],["getinputvalu",{"_index":287,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["getnoteisselect",{"_index":242,"title":{},"body":{"components/NotesListComponent.html":{}}}],["getnoteisselected(not",{"_index":254,"title":{},"body":{"components/NotesListComponent.html":{}}}],["global",{"_index":170,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["go",{"_index":82,"title":{},"body":{"index.html":{}}}],["good",{"_index":277,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["handl",{"_index":237,"title":{},"body":{"components/NotesListComponent.html":{}}}],["help",{"_index":80,"title":{},"body":{"index.html":{}}}],["html",{"_index":222,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["htmlinputel",{"_index":295,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["http://localhost:4200",{"_index":46,"title":{},"body":{"index.html":{}}}],["httpclientmodul",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["id",{"_index":416,"title":{},"body":{"interfaces/NotesListState.html":{},"interfaces/RawNote.html":{}}}],["immut",{"_index":394,"title":{},"body":{"interfaces/Note.html":{},"interfaces/NotesListState.html":{},"interfaces/RawNote.html":{}}}],["implement",{"_index":309,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{}}}],["import",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AppStateModule.html":{},"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{},"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{},"interfaces/AppState.html":{},"interfaces/Note.html":{},"interfaces/NotesListState.html":{}}}],["incorrect",{"_index":184,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["index",{"_index":31,"title":{"index.html":{}},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{},"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{},"interfaces/AppState.html":{},"interfaces/Note.html":{},"interfaces/NotesListState.html":{},"interfaces/RawNote.html":{},"interfaces/SearchParamsState.html":{},"miscellaneous/typealiases.html":{}}}],["indic",{"_index":399,"title":{},"body":{"interfaces/Note.html":{}}}],["info",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/AppStateModule.html":{},"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{},"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{},"interfaces/AppState.html":{},"interfaces/Note.html":{},"interfaces/NotesListState.html":{},"interfaces/RawNote.html":{},"interfaces/SearchParamsState.html":{}}}],["inject",{"_index":113,"title":{},"body":{"overview.html":{}}}],["input",{"_index":215,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["inputel",{"_index":297,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["inputelement.valu",{"_index":303,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["inputstr",{"_index":302,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["interfac",{"_index":116,"title":{"interfaces/AppState.html":{},"interfaces/Note.html":{},"interfaces/NotesListState.html":{},"interfaces/RawNote.html":{},"interfaces/SearchParamsState.html":{}},"body":{"overview.html":{},"modules/AppStateModule.html":{},"interfaces/AppState.html":{},"interfaces/Note.html":{},"interfaces/NotesListState.html":{},"interfaces/RawNote.html":{},"interfaces/SearchParamsState.html":{}}}],["isload",{"_index":406,"title":{},"body":{"interfaces/NotesListState.html":{}}}],["iso",{"_index":430,"title":{},"body":{"interfaces/RawNote.html":{}}}],["issav",{"_index":397,"title":{},"body":{"interfaces/Note.html":{},"interfaces/NotesListState.html":{}}}],["js",{"_index":17,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":72,"title":{},"body":{"index.html":{}}}],["keyword",{"_index":289,"title":{},"body":{"components/SearchBarComponent.html":{},"classes/UpdateSearchByKeywords.html":{},"interfaces/RawNote.html":{}}}],["legend",{"_index":87,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{},"modules/AppStateModule.html":{},"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["list",{"_index":158,"title":{},"body":{"modules/AppStateModule.html":{},"components/NotesListComponent.html":{},"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"interfaces/AppState.html":{},"interfaces/NotesListState.html":{},"interfaces/SearchParamsState.html":{}}}],["list'},{'nam",{"_index":231,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["list.actions.t",{"_index":308,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"miscellaneous/typealiases.html":{}}}],["list.actions.ts:22",{"_index":365,"title":{},"body":{"classes/LoadNotesStart.html":{}}}],["list.actions.ts:25",{"_index":366,"title":{},"body":{"classes/LoadNotesSuccess.html":{}}}],["list.actions.ts:26",{"_index":367,"title":{},"body":{"classes/LoadNotesSuccess.html":{}}}],["list.actions.ts:29",{"_index":363,"title":{},"body":{"classes/LoadNotesError.html":{}}}],["list.actions.ts:30",{"_index":364,"title":{},"body":{"classes/LoadNotesError.html":{}}}],["list.actions.ts:33",{"_index":374,"title":{},"body":{"classes/SelectNote.html":{}}}],["list.actions.ts:34",{"_index":375,"title":{},"body":{"classes/SelectNote.html":{}}}],["list.actions.ts:37",{"_index":315,"title":{},"body":{"classes/AddNote.html":{}}}],["list.actions.ts:40",{"_index":376,"title":{},"body":{"classes/UpdateNote.html":{}}}],["list.actions.ts:41",{"_index":377,"title":{},"body":{"classes/UpdateNote.html":{}}}],["list.actions.ts:47",{"_index":370,"title":{},"body":{"classes/SaveNoteStart.html":{}}}],["list.actions.ts:48",{"_index":371,"title":{},"body":{"classes/SaveNoteStart.html":{}}}],["list.actions.ts:51",{"_index":372,"title":{},"body":{"classes/SaveNoteSuccess.html":{}}}],["list.actions.ts:52",{"_index":373,"title":{},"body":{"classes/SaveNoteSuccess.html":{}}}],["list.actions.ts:55",{"_index":368,"title":{},"body":{"classes/SaveNoteError.html":{}}}],["list.actions.ts:56",{"_index":369,"title":{},"body":{"classes/SaveNoteError.html":{}}}],["list.actions.ts:59",{"_index":360,"title":{},"body":{"classes/DeleteNoteStart.html":{}}}],["list.actions.ts:60",{"_index":361,"title":{},"body":{"classes/DeleteNoteStart.html":{}}}],["list.actions.ts:66",{"_index":362,"title":{},"body":{"classes/DeleteNoteSuccess.html":{}}}],["list.actions.ts:69",{"_index":358,"title":{},"body":{"classes/DeleteNoteError.html":{}}}],["list.actions.ts:70",{"_index":359,"title":{},"body":{"classes/DeleteNoteError.html":{}}}],["list.compon",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["list.component.html",{"_index":240,"title":{},"body":{"components/NotesListComponent.html":{}}}],["list.component.scss",{"_index":239,"title":{},"body":{"components/NotesListComponent.html":{}}}],["list.component.t",{"_index":236,"title":{},"body":{"components/NotesListComponent.html":{}}}],["list.component.ts:14",{"_index":249,"title":{},"body":{"components/NotesListComponent.html":{}}}],["list.component.ts:15",{"_index":250,"title":{},"body":{"components/NotesListComponent.html":{}}}],["list.component.ts:16",{"_index":253,"title":{},"body":{"components/NotesListComponent.html":{}}}],["list.component.ts:18",{"_index":264,"title":{},"body":{"components/NotesListComponent.html":{}}}],["list.component.ts:22",{"_index":255,"title":{},"body":{"components/NotesListComponent.html":{}}}],["list.component.ts:29",{"_index":261,"title":{},"body":{"components/NotesListComponent.html":{}}}],["list.effetc",{"_index":169,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["list.reduc",{"_index":165,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["list/not",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/AppStateModule.html":{},"components/NotesListComponent.html":{},"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"interfaces/AppState.html":{},"interfaces/NotesListState.html":{},"miscellaneous/typealiases.html":{}}}],["liter",{"_index":357,"title":{},"body":{"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{},"interfaces/NotesListState.html":{}}}],["load",{"_index":320,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"interfaces/NotesListState.html":{}}}],["load_notes_error",{"_index":323,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{}}}],["load_notes_start",{"_index":319,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{}}}],["load_notes_success",{"_index":321,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{}}}],["loadnoteserror",{"_index":339,"title":{"classes/LoadNotesError.html":{}},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"miscellaneous/typealiases.html":{}}}],["loadnotesstart",{"_index":335,"title":{"classes/LoadNotesStart.html":{}},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"miscellaneous/typealiases.html":{}}}],["loadnotessuccess",{"_index":336,"title":{"classes/LoadNotesSuccess.html":{}},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"miscellaneous/typealiases.html":{}}}],["luxon",{"_index":19,"title":{},"body":{"dependencies.html":{}}}],["make",{"_index":77,"title":{},"body":{"index.html":{},"interfaces/Note.html":{}}}],["match",{"_index":28,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"modules.html":{},"modules/AppModule.html":{},"modules/AppStateModule.html":{},"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{},"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{},"interfaces/AppState.html":{},"interfaces/Note.html":{},"interfaces/NotesListState.html":{},"interfaces/RawNote.html":{},"interfaces/SearchParamsState.html":{},"miscellaneous/typealiases.html":{}}}],["messag",{"_index":216,"title":{},"body":{"components/ErrorAlertComponent.html":{}}}],["metadata",{"_index":206,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["metareduc",{"_index":193,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["method",{"_index":241,"title":{},"body":{"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["miscellan",{"_index":441,"title":{"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/typealiases.html":{}}}],["mode",{"_index":189,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["model",{"_index":389,"title":{},"body":{"interfaces/Note.html":{}}}],["modul",{"_index":89,"title":{"modules.html":{},"modules/AppModule.html":{},"modules/AppStateModule.html":{}},"body":{"overview.html":{},"modules.html":{},"modules/AppModule.html":{},"modules/AppStateModule.html":{}}}],["more",{"_index":81,"title":{},"body":{"index.html":{}}}],["move",{"_index":437,"title":{},"body":{"interfaces/SearchParamsState.html":{}}}],["multipl",{"_index":440,"title":{},"body":{"interfaces/SearchParamsState.html":{}}}],["mutat",{"_index":192,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["name",{"_index":56,"title":{},"body":{"index.html":{},"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{}}}],["nanoid",{"_index":21,"title":{},"body":{"dependencies.html":{}}}],["navig",{"_index":45,"title":{},"body":{"index.html":{}}}],["new",{"_index":57,"title":{},"body":{"index.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["ng",{"_index":42,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["ngrx",{"_index":152,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["ngrx/effect",{"_index":14,"title":{},"body":{"dependencies.html":{},"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["ngrx/store",{"_index":15,"title":{},"body":{"dependencies.html":{},"modules/AppStateModule.html":{},"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{},"interfaces/AppState.html":{}}}],["note",{"_index":229,"title":{"interfaces/Note.html":{}},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{},"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"interfaces/Note.html":{},"interfaces/NotesListState.html":{},"interfaces/RawNote.html":{},"interfaces/SearchParamsState.html":{}}}],["note.capt",{"_index":270,"title":{},"body":{"components/NotesListComponent.html":{}}}],["note.id",{"_index":267,"title":{},"body":{"components/NotesListComponent.html":{}}}],["note.interfac",{"_index":318,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"interfaces/Note.html":{},"interfaces/NotesListState.html":{}}}],["note.interface.t",{"_index":418,"title":{},"body":{"interfaces/RawNote.html":{}}}],["note.interface.ts:10",{"_index":427,"title":{},"body":{"interfaces/RawNote.html":{}}}],["note.interface.ts:14",{"_index":429,"title":{},"body":{"interfaces/RawNote.html":{}}}],["note.interface.ts:7",{"_index":426,"title":{},"body":{"interfaces/RawNote.html":{}}}],["note.interface.ts:8",{"_index":425,"title":{},"body":{"interfaces/RawNote.html":{}}}],["note.interface.ts:9",{"_index":428,"title":{},"body":{"interfaces/RawNote.html":{}}}],["note['id",{"_index":266,"title":{},"body":{"components/NotesListComponent.html":{}}}],["notedetailscompon",{"_index":103,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{},"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["noteid",{"_index":341,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{}}}],["noteissav",{"_index":350,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{}}}],["notesconnectorservic",{"_index":107,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{}}}],["noteslist",{"_index":172,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["noteslistcompon",{"_index":102,"title":{"components/NotesListComponent.html":{}},"body":{"overview.html":{},"modules/AppModule.html":{},"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["noteslisteffect",{"_index":168,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["noteslistreduc",{"_index":164,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["noteslistst",{"_index":156,"title":{"interfaces/NotesListState.html":{}},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{},"interfaces/NotesListState.html":{}}}],["ntb",{"_index":32,"title":{},"body":{"index.html":{},"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["null",{"_index":300,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["oninput",{"_index":288,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["oninput(inputel",{"_index":294,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["onnoteclick",{"_index":243,"title":{},"body":{"components/NotesListComponent.html":{}}}],["onnoteclick(not",{"_index":260,"title":{},"body":{"components/NotesListComponent.html":{}}}],["option",{"_index":257,"title":{},"body":{"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{}}}],["otherwis",{"_index":182,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["out",{"_index":84,"title":{},"body":{"index.html":{},"overview.html":{},"modules/AppModule.html":{},"modules/AppStateModule.html":{}}}],["output",{"_index":246,"title":{},"body":{"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["overview",{"_index":86,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":0,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":163,"title":{},"body":{"modules/AppStateModule.html":{},"classes/UpdateSearchByKeywords.html":{},"interfaces/AppState.html":{},"interfaces/SearchParamsState.html":{}}}],["paramet",{"_index":256,"title":{},"body":{"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{}}}],["params.actions.t",{"_index":380,"title":{},"body":{"classes/UpdateSearchByKeywords.html":{},"miscellaneous/typealiases.html":{}}}],["params.actions.ts:6",{"_index":381,"title":{},"body":{"classes/UpdateSearchByKeywords.html":{}}}],["params.actions.ts:7",{"_index":382,"title":{},"body":{"classes/UpdateSearchByKeywords.html":{}}}],["params.reduc",{"_index":167,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["params/search",{"_index":162,"title":{},"body":{"modules/AppStateModule.html":{},"classes/UpdateSearchByKeywords.html":{},"interfaces/AppState.html":{},"interfaces/SearchParamsState.html":{},"miscellaneous/typealiases.html":{}}}],["part",{"_index":434,"title":{},"body":{"interfaces/SearchParamsState.html":{}}}],["partial",{"_index":353,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"miscellaneous/typealiases.html":{}}}],["partialnoteupd",{"_index":345,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"miscellaneous/typealiases.html":{}}}],["partialupd",{"_index":344,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{}}}],["payload",{"_index":338,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{}}}],["present",{"_index":393,"title":{},"body":{"interfaces/Note.html":{}}}],["process",{"_index":392,"title":{},"body":{"interfaces/Note.html":{}}}],["prod",{"_index":65,"title":{},"body":{"index.html":{}}}],["product",{"_index":67,"title":{},"body":{"index.html":{}}}],["project",{"_index":33,"title":{},"body":{"index.html":{}}}],["properti",{"_index":311,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{},"interfaces/AppState.html":{},"interfaces/Note.html":{},"interfaces/NotesListState.html":{},"interfaces/RawNote.html":{},"interfaces/SearchParamsState.html":{}}}],["protractor",{"_index":75,"title":{},"body":{"index.html":{}}}],["provid",{"_index":91,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{},"modules/AppStateModule.html":{}}}],["public",{"_index":354,"title":{},"body":{"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{}}}],["purpos",{"_index":395,"title":{},"body":{"interfaces/Note.html":{},"interfaces/NotesListState.html":{},"interfaces/RawNote.html":{}}}],["raw",{"_index":419,"title":{},"body":{"interfaces/RawNote.html":{}}}],["rawnot",{"_index":316,"title":{"interfaces/RawNote.html":{}},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"interfaces/Note.html":{},"interfaces/NotesListState.html":{},"interfaces/RawNote.html":{}}}],["rawnote['id",{"_index":342,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{}}}],["readm",{"_index":85,"title":{},"body":{"index.html":{}}}],["readonli",{"_index":312,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{},"interfaces/Note.html":{},"interfaces/NotesListState.html":{},"interfaces/RawNote.html":{},"interfaces/SearchParamsState.html":{}}}],["reduc",{"_index":175,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["relat",{"_index":404,"title":{},"body":{"interfaces/NotesListState.html":{}}}],["reload",{"_index":49,"title":{},"body":{"index.html":{}}}],["reset",{"_index":110,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{},"modules/AppStateModule.html":{}}}],["result",{"_index":27,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"modules.html":{},"modules/AppModule.html":{},"modules/AppStateModule.html":{},"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{},"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{},"interfaces/AppState.html":{},"interfaces/Note.html":{},"interfaces/NotesListState.html":{},"interfaces/RawNote.html":{},"interfaces/SearchParamsState.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":258,"title":{},"body":{"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["root'},{'nam",{"_index":227,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["run",{"_index":41,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":23,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":328,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"interfaces/Note.html":{}}}],["save_note_error",{"_index":330,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{}}}],["save_note_start",{"_index":327,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{}}}],["save_note_success",{"_index":329,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{}}}],["savedent",{"_index":407,"title":{},"body":{"interfaces/NotesListState.html":{}}}],["savenoteerror",{"_index":348,"title":{"classes/SaveNoteError.html":{}},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"miscellaneous/typealiases.html":{}}}],["savenotestart",{"_index":346,"title":{"classes/SaveNoteStart.html":{}},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"miscellaneous/typealiases.html":{}}}],["savenotesuccess",{"_index":347,"title":{"classes/SaveNoteSuccess.html":{}},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"miscellaneous/typealiases.html":{}}}],["scaffold",{"_index":54,"title":{},"body":{"index.html":{}}}],["search",{"_index":232,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{},"classes/UpdateSearchByKeywords.html":{}}}],["search/filt",{"_index":433,"title":{},"body":{"interfaces/SearchParamsState.html":{}}}],["searchbarcompon",{"_index":104,"title":{"components/SearchBarComponent.html":{}},"body":{"overview.html":{},"modules/AppModule.html":{},"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["searchbykeyword",{"_index":384,"title":{},"body":{"classes/UpdateSearchByKeywords.html":{},"interfaces/SearchParamsState.html":{}}}],["searchparam",{"_index":173,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["searchparamsreduc",{"_index":166,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["searchparamsst",{"_index":160,"title":{"interfaces/SearchParamsState.html":{}},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{},"interfaces/SearchParamsState.html":{}}}],["select",{"_index":238,"title":{},"body":{"components/NotesListComponent.html":{},"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{}}}],["select_not",{"_index":324,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{}}}],["selectednoteid",{"_index":245,"title":{},"body":{"components/NotesListComponent.html":{},"interfaces/NotesListState.html":{}}}],["selectnot",{"_index":247,"title":{"classes/SelectNote.html":{}},"body":{"components/NotesListComponent.html":{},"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"miscellaneous/typealiases.html":{}}}],["selector",{"_index":209,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["serial",{"_index":420,"title":{},"body":{"interfaces/RawNote.html":{}}}],["serv",{"_index":43,"title":{},"body":{"index.html":{}}}],["server",{"_index":40,"title":{},"body":{"index.html":{}}}],["services/not",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["services/raw",{"_index":317,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"interfaces/Note.html":{},"interfaces/NotesListState.html":{}}}],["shape",{"_index":421,"title":{},"body":{"interfaces/RawNote.html":{}}}],["show",{"_index":204,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"interfaces/SearchParamsState.html":{}}}],["singl",{"_index":436,"title":{},"body":{"interfaces/SearchParamsState.html":{}}}],["slice",{"_index":405,"title":{},"body":{"interfaces/NotesListState.html":{},"interfaces/SearchParamsState.html":{}}}],["slices/not",{"_index":157,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["slices/search",{"_index":161,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["sourc",{"_index":51,"title":{},"body":{"index.html":{},"modules/AppModule.html":{},"modules/AppStateModule.html":{},"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{},"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{},"interfaces/AppState.html":{},"interfaces/Note.html":{},"interfaces/NotesListState.html":{},"interfaces/RawNote.html":{},"interfaces/SearchParamsState.html":{}}}],["src/app/app.module.t",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/error",{"_index":200,"title":{},"body":{"components/ErrorAlertComponent.html":{}}}],["src/app/components/not",{"_index":235,"title":{},"body":{"components/NotesListComponent.html":{}}}],["src/app/components/search",{"_index":271,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["src/app/services/raw",{"_index":417,"title":{},"body":{"interfaces/RawNote.html":{}}}],["src/app/stat",{"_index":144,"title":{},"body":{"modules/AppStateModule.html":{},"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{},"interfaces/AppState.html":{},"interfaces/Note.html":{},"interfaces/NotesListState.html":{},"interfaces/SearchParamsState.html":{},"miscellaneous/typealiases.html":{}}}],["stamp",{"_index":432,"title":{},"body":{"interfaces/RawNote.html":{}}}],["start",{"_index":30,"title":{"index.html":{}},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{}}}],["state",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AppStateModule.html":{},"components/NotesListComponent.html":{},"interfaces/AppState.html":{},"interfaces/NotesListState.html":{},"interfaces/SearchParamsState.html":{}}}],["state.interfac",{"_index":159,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["state.interface.t",{"_index":401,"title":{},"body":{"interfaces/NotesListState.html":{},"interfaces/SearchParamsState.html":{}}}],["state.interface.ts:10",{"_index":414,"title":{},"body":{"interfaces/NotesListState.html":{}}}],["state.interface.ts:11",{"_index":410,"title":{},"body":{"interfaces/NotesListState.html":{}}}],["state.interface.ts:12",{"_index":412,"title":{},"body":{"interfaces/NotesListState.html":{}}}],["state.interface.ts:13",{"_index":411,"title":{},"body":{"interfaces/NotesListState.html":{}}}],["state.interface.ts:14",{"_index":409,"title":{},"body":{"interfaces/NotesListState.html":{}}}],["state.interface.ts:8",{"_index":413,"title":{},"body":{"interfaces/NotesListState.html":{},"interfaces/SearchParamsState.html":{}}}],["state.interface.ts:9",{"_index":415,"title":{},"body":{"interfaces/NotesListState.html":{}}}],["state.modul",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["state.module.t",{"_index":145,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["state.module.ts:17",{"_index":385,"title":{},"body":{"interfaces/AppState.html":{}}}],["state.module.ts:18",{"_index":386,"title":{},"body":{"interfaces/AppState.html":{}}}],["statement",{"_index":180,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["store",{"_index":62,"title":{},"body":{"index.html":{},"modules/AppStateModule.html":{},"interfaces/AppState.html":{},"interfaces/RawNote.html":{}}}],["store/app",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["store/selectors/note.interfac",{"_index":265,"title":{},"body":{"components/NotesListComponent.html":{}}}],["store/selectors/note.interface.t",{"_index":387,"title":{},"body":{"interfaces/Note.html":{}}}],["store/selectors/note.interface.ts:13",{"_index":398,"title":{},"body":{"interfaces/Note.html":{}}}],["store/slices/not",{"_index":307,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"interfaces/NotesListState.html":{},"miscellaneous/typealiases.html":{}}}],["store/slices/search",{"_index":379,"title":{},"body":{"classes/UpdateSearchByKeywords.html":{},"interfaces/SearchParamsState.html":{},"miscellaneous/typealiases.html":{}}}],["storedevtoolsmodul",{"_index":149,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["storedevtoolsmodule.instru",{"_index":195,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["storefreez",{"_index":151,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["storemodul",{"_index":146,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["storemodule.forroot",{"_index":188,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["strict",{"_index":177,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["string",{"_index":218,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/SearchBarComponent.html":{},"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"interfaces/NotesListState.html":{},"interfaces/RawNote.html":{}}}],["structur",{"_index":390,"title":{},"body":{"interfaces/Note.html":{}}}],["styleurl",{"_index":211,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["success",{"_index":322,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{}}}],["support",{"_index":117,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":78,"title":{},"body":{"index.html":{}}}],["svg",{"_index":118,"title":{},"body":{"modules.html":{}}}],["take",{"_index":273,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["templat",{"_index":197,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["templateurl",{"_index":213,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["ternari",{"_index":179,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["test",{"_index":69,"title":{},"body":{"index.html":{}}}],["text",{"_index":423,"title":{},"body":{"interfaces/RawNote.html":{}}}],["this.keyword",{"_index":298,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["this.keywords.join",{"_index":301,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["this.keywords.length",{"_index":299,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["this.selectednoteid",{"_index":268,"title":{},"body":{"components/NotesListComponent.html":{}}}],["this.selectnote.emit(note.id",{"_index":269,"title":{},"body":{"components/NotesListComponent.html":{}}}],["this.updatekeywords.emit",{"_index":304,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["this.updatekeywords.emit(inputstring.split",{"_index":305,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["time",{"_index":431,"title":{},"body":{"interfaces/RawNote.html":{}}}],["timestamp",{"_index":424,"title":{},"body":{"interfaces/RawNote.html":{}}}],["todo",{"_index":276,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["tracknotebi",{"_index":244,"title":{},"body":{"components/NotesListComponent.html":{}}}],["tracknoteby(not",{"_index":263,"title":{},"body":{"components/NotesListComponent.html":{}}}],["tree",{"_index":199,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["type",{"_index":217,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{},"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{},"interfaces/AppState.html":{},"interfaces/Note.html":{},"interfaces/NotesListState.html":{},"interfaces/RawNote.html":{},"interfaces/SearchParamsState.html":{},"miscellaneous/typealiases.html":{}}}],["typealias",{"_index":442,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["unintent",{"_index":191,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["unit",{"_index":68,"title":{},"body":{"index.html":{}}}],["unsavedent",{"_index":408,"title":{},"body":{"interfaces/NotesListState.html":{}}}],["updat",{"_index":326,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{}}}],["update_not",{"_index":325,"title":{},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{}}}],["update_search_by_keyword",{"_index":383,"title":{},"body":{"classes/UpdateSearchByKeywords.html":{}}}],["updatekeyword",{"_index":290,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["updatenot",{"_index":343,"title":{"classes/UpdateNote.html":{}},"body":{"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"miscellaneous/typealiases.html":{}}}],["updatesearchbykeyword",{"_index":378,"title":{"classes/UpdateSearchByKeywords.html":{}},"body":{"classes/UpdateSearchByKeywords.html":{},"miscellaneous/typealiases.html":{}}}],["us",{"_index":58,"title":{},"body":{"index.html":{},"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["valu",{"_index":185,"title":{},"body":{"modules/AppStateModule.html":{},"classes/AddNote.html":{},"classes/DeleteNoteError.html":{},"classes/DeleteNoteStart.html":{},"classes/DeleteNoteSuccess.html":{},"classes/LoadNotesError.html":{},"classes/LoadNotesStart.html":{},"classes/LoadNotesSuccess.html":{},"classes/SaveNoteError.html":{},"classes/SaveNoteStart.html":{},"classes/SaveNoteSuccess.html":{},"classes/SelectNote.html":{},"classes/UpdateNote.html":{},"classes/UpdateSearchByKeywords.html":{},"interfaces/AppState.html":{}}}],["var",{"_index":225,"title":{},"body":{"components/ErrorAlertComponent.html":{},"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["version",{"_index":37,"title":{},"body":{"index.html":{}}}],["via",{"_index":71,"title":{},"body":{"index.html":{}}}],["view",{"_index":388,"title":{},"body":{"interfaces/Note.html":{}}}],["void",{"_index":262,"title":{},"body":{"components/NotesListComponent.html":{},"components/SearchBarComponent.html":{}}}],["webpack",{"_index":183,"title":{},"body":{"modules/AppStateModule.html":{},"interfaces/AppState.html":{}}}],["word",{"_index":283,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["zone.j",{"_index":25,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":109,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{},"modules/AppStateModule.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Dependencies\n\n\n        @angular/animations : ^4.0.0\n        @angular/common : ^4.0.0\n        @angular/compiler : ^4.0.0\n        @angular/core : ^4.0.0\n        @angular/forms : ^4.0.0\n        @angular/http : ^4.0.0\n        @angular/platform-browser : ^4.0.0\n        @angular/platform-browser-dynamic : ^4.0.0\n        @angular/router : ^4.0.0\n        @ngrx/effects : ^4.0.0\n        @ngrx/store : ^4.0.0\n        core-js : ^2.4.1\n        luxon : ^0.5.3\n        nanoid : ^1.0.2\n        rxjs : ^5.4.1\n        zone.js : ^0.8.14\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNtb\nThis project was generated with Angular CLI version 1.2.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nBefore running the tests make sure you are serving the app via ng serve.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppStateModule\n\n\n\ncluster_AppStateModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nNotesListComponent\n\nNotesListComponent\n\nAppModule -->\n\nNotesListComponent->AppModule\n\n\n\n\n\nNoteDetailsComponent\n\nNoteDetailsComponent\n\nAppModule -->\n\nNoteDetailsComponent->AppModule\n\n\n\n\n\nSearchBarComponent\n\nSearchBarComponent\n\nAppModule -->\n\nSearchBarComponent->AppModule\n\n\n\n\n\nErrorAlertComponent\n\nErrorAlertComponent\n\nAppModule -->\n\nErrorAlertComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppStateModule\n\nAppStateModule\n\nAppModule -->\n\nAppStateModule->AppModule\n\n\n\n\n\nNotesConnectorService\n\nNotesConnectorService\n\nAppModule -->\n\nNotesConnectorService->AppModule\n\n\n\n\n\n. === false ? .() : []\n\n. === false ? .() : []\n\nAppStateModule -->\n\n. === false ? .() : []->AppStateModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            2 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        5 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        13 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppStateModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nNotesListComponent\n\nNotesListComponent\n\nAppModule -->\n\nNotesListComponent->AppModule\n\n\n\n\n\nNoteDetailsComponent\n\nNoteDetailsComponent\n\nAppModule -->\n\nNoteDetailsComponent->AppModule\n\n\n\n\n\nSearchBarComponent\n\nSearchBarComponent\n\nAppModule -->\n\nSearchBarComponent->AppModule\n\n\n\n\n\nErrorAlertComponent\n\nErrorAlertComponent\n\nAppModule -->\n\nErrorAlertComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppStateModule\n\nAppStateModule\n\nAppModule -->\n\nAppStateModule->AppModule\n\n\n\n\n\nNotesConnectorService\n\nNotesConnectorService\n\nAppModule -->\n\nNotesConnectorService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                NotesListComponent\n                            \n                            \n                                NoteDetailsComponent\n                            \n                            \n                                SearchBarComponent\n                            \n                            \n                                ErrorAlertComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     NotesConnectorService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppStateModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppStateModule } from './state-store/app-state.module';\nimport { NotesConnectorService } from './services/notes-connector.service';\nimport { AppComponent } from './app.component';\nimport { NotesListComponent } from './components/notes-list/notes-list.component';\nimport { NoteDetailsComponent } from './components/note-details/note-details.component';\nimport { SearchBarComponent } from './components/search-bar/search-bar.component';\nimport { ErrorAlertComponent } from './components/error-alert/error-alert.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NotesListComponent,\n    NoteDetailsComponent,\n    SearchBarComponent,\n    ErrorAlertComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppStateModule,\n  ],\n  providers: [\n    NotesConnectorService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppStateModule.html":{"url":"modules/AppStateModule.html","title":"module - AppStateModule","body":"\n                   \n\n\n\n\n  Modules\n  AppStateModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppStateModule\n\n\n\ncluster_AppStateModule_imports\n\n\n\n\n. === false ? .() : []\n\n. === false ? .() : []\n\n\n\nAppStateModule\n\nAppStateModule\n\nAppStateModule -->\n\n. === false ? .() : []->AppStateModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/state-store/app-state.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Imports\n                    \n                            \n                                    . === false ? .() : []\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { StoreModule, ActionReducerMap } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { storeFreeze } from 'ngrx-store-freeze';\nimport { environment } from '../../environments/environment';\nimport { NotesListState } from './slices/notes-list/notes-list-state.interface';\nimport { SearchParamsState } from './slices/search-params/search-params-state.interface';\nimport { notesListReducer } from './slices/notes-list/notes-list.reducer';\nimport { searchParamsReducer } from './slices/search-params/search-params.reducer';\nimport { NotesListEffects } from './slices/notes-list/notes-list.effetcs';\n\n/**\n * Global App state\n */\nexport interface AppState {\n  notesList: NotesListState;\n  searchParams: SearchParamsState;\n}\n\nconst reducers: ActionReducerMap = {\n  notesList: notesListReducer,\n  searchParams: searchParamsReducer,\n};\n\nconst effects = [ NotesListEffects ];\n\n// Use strict equality in ternary statements below because otherwise Webpack uses incorrect value when assembles bundle\n@NgModule({\n  imports: [\n    StoreModule.forRoot(\n      reducers,\n      // Freeze state in dev mode to avoid unintentional mutations\n      { metaReducers: environment.production === false ? [ storeFreeze ] : [] }\n    ),\n    environment.production === false ? StoreDevtoolsModule.instrument() : [],\n    EffectsModule.forRoot(effects),\n  ],\n})\nexport class AppStateModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorAlertComponent.html":{"url":"components/ErrorAlertComponent.html","title":"component - ErrorAlertComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorAlertComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/components/error-alert/error-alert.component.ts\n\n\n    \n        Description\n    \n    \n        Dumb component that shows error (if any).\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ntb-error-alert\n            \n\n            \n                styleUrls\n                error-alert.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error-alert.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n            \n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            message\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/app/components/error-alert/error-alert.component.ts:13\n                                \n                            \n                \n            \n    \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\n/**\n * Dumb component that shows error (if any).\n */\n@Component({\n  selector: 'ntb-error-alert',\n  templateUrl: './error-alert.component.html',\n  styleUrls: ['./error-alert.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ErrorAlertComponent {\n  @Input() message: string;\n}\n\n    \n\n    \n        \n\n  {{message}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{message}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ntb-root'},{'name': 'ErrorAlertComponent', 'selector': 'ntb-error-alert'},{'name': 'NoteDetailsComponent', 'selector': 'ntb-note-details'},{'name': 'NotesListComponent', 'selector': 'ntb-notes-list'},{'name': 'SearchBarComponent', 'selector': 'ntb-search-bar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorAlertComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotesListComponent.html":{"url":"components/NotesListComponent.html","title":"component - NotesListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotesListComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/components/notes-list/notes-list.component.ts\n\n\n    \n        Description\n    \n    \n        Dumb component that shows list of notes and handles note selection.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ntb-notes-list\n            \n\n            \n                styleUrls\n                notes-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./notes-list.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNoteIsSelected\n                            \n                            \n                                onNoteClick\n                            \n                            \n                                trackNoteBy\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                notes\n                            \n                            \n                                selectedNoteId\n                            \n                        \n                    \n                \n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectNote\n                            \n                        \n                    \n                \n            \n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            notes\n                        \n                        \n                              \n                                Type:    Array\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/app/components/notes-list/notes-list.component.ts:14\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            selectedNoteId\n                        \n                        \n                        \n                    \n                            \n                                \n                                    Defined in src/app/components/notes-list/notes-list.component.ts:15\n                                \n                            \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            \n                            selectNote\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in src/app/components/notes-list/notes-list.component.ts:16\n                                \n                            \n                \n            \n    \n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                getNoteIsSelected\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    getNoteIsSelected(note: Note)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/app/components/notes-list/notes-list.component.ts:22\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        note\n                                                        \n                                                            \n                                                                        Note\n                                                            \n                                                        \n                                                        \n                                                                no\n                                                        \n                                                        \n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     boolean\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                onNoteClick\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    onNoteClick(note: Note)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/app/components/notes-list/notes-list.component.ts:29\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        note\n                                                        \n                                                            \n                                                                        Note\n                                                            \n                                                        \n                                                        \n                                                                no\n                                                        \n                                                        \n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                trackNoteBy\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    trackNoteBy(note: Note)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/app/components/notes-list/notes-list.component.ts:18\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        note\n                                                        \n                                                            \n                                                                        Note\n                                                            \n                                                        \n                                                        \n                                                                no\n                                                        \n                                                        \n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, ChangeDetectionStrategy, EventEmitter } from '@angular/core';\nimport { Note } from '../../state-store/selectors/note.interface';\n\n/**\n * Dumb component that shows list of notes and handles note selection.\n */\n@Component({\n  selector: 'ntb-notes-list',\n  templateUrl: './notes-list.component.html',\n  styleUrls: ['./notes-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NotesListComponent {\n  @Input() notes: Array;\n  @Input() selectedNoteId: Note['id'];\n  @Output() selectNote = new EventEmitter();\n\n  trackNoteBy(note: Note): Note['id'] {\n    return note && note.id;\n  }\n\n  getNoteIsSelected(note: Note): boolean {\n    if (!this.selectedNoteId) {\n      return false;\n    }\n    return note.id === this.selectedNoteId;\n  }\n\n  onNoteClick(note: Note): void {\n    if (!note) {\n      return;\n    }\n    this.selectNote.emit(note.id);\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{note.caption}}\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{note.caption}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ntb-root'},{'name': 'ErrorAlertComponent', 'selector': 'ntb-error-alert'},{'name': 'NoteDetailsComponent', 'selector': 'ntb-note-details'},{'name': 'NotesListComponent', 'selector': 'ntb-notes-list'},{'name': 'SearchBarComponent', 'selector': 'ntb-search-bar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotesListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchBarComponent.html":{"url":"components/SearchBarComponent.html","title":"component - SearchBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchBarComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/components/search-bar/search-bar.component.ts\n\n\n    \n        Description\n    \n    \n        Dumb component that takes care of search flow.\nTODO: would be good to add type-ahead functionality\nand convert entered words to chips.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ntb-search-bar\n            \n\n            \n                styleUrls\n                search-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search-bar.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInputValue\n                            \n                            \n                                onInput\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                keywords\n                            \n                        \n                    \n                \n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                updateKeywords\n                            \n                        \n                    \n                \n            \n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            keywords\n                        \n                        \n                              \n                                Type:    Array\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/app/components/search-bar/search-bar.component.ts:15\n                                \n                            \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            \n                            updateKeywords\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in src/app/components/search-bar/search-bar.component.ts:16\n                                \n                            \n                \n            \n    \n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                getInputValue\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    getInputValue()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/app/components/search-bar/search-bar.component.ts:18\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     string\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                onInput\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    onInput(inputElement: HTMLInputElement)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/app/components/search-bar/search-bar.component.ts:25\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        inputElement\n                                                        \n                                                            \n                                                                        HTMLInputElement\n                                                            \n                                                        \n                                                        \n                                                                no\n                                                        \n                                                        \n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, ChangeDetectionStrategy, EventEmitter } from '@angular/core';\n\n/**\n * Dumb component that takes care of search flow.\n * TODO: would be good to add type-ahead functionality\n * and convert entered words to chips.\n */\n@Component({\n  selector: 'ntb-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchBarComponent {\n  @Input() keywords: Array;\n  @Output() updateKeywords = new EventEmitter>();\n\n  getInputValue(): string {\n    if (!this.keywords || !this.keywords.length) {\n      return null;\n    }\n    return this.keywords.join(' ');\n  }\n\n  onInput(inputElement: HTMLInputElement): void {\n    if (!inputElement) {\n      return;\n    }\n    const inputString = inputElement.value;\n\n    if (!inputString) {\n      this.updateKeywords.emit([]);\n      return;\n    }\n    this.updateKeywords.emit(inputString.split(' '));\n  }\n}\n\n    \n\n    \n        \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ntb-root'},{'name': 'ErrorAlertComponent', 'selector': 'ntb-error-alert'},{'name': 'NoteDetailsComponent', 'selector': 'ntb-note-details'},{'name': 'NotesListComponent', 'selector': 'ntb-notes-list'},{'name': 'SearchBarComponent', 'selector': 'ntb-search-bar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddNote.html":{"url":"classes/AddNote.html","title":"class - AddNote","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddNote\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-store/slices/notes-list/notes-list.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : ADD_NOTE\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:37\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { RawNote } from '../../../services/raw-note.interface';\n\nexport const LOAD_NOTES_START = '[Notes list] Load notes start';\nexport const LOAD_NOTES_SUCCESS = '[Notes list] Load notes success';\nexport const LOAD_NOTES_ERROR = '[Notes list] Load notes error';\n\nexport const SELECT_NOTE = '[Notes list] Select note';\n\nexport const ADD_NOTE = '[Notes list] Add note';\nexport const UPDATE_NOTE = '[Notes list] Update note';\n\nexport const SAVE_NOTE_START = '[Notes list] Save note start';\nexport const SAVE_NOTE_SUCCESS = '[Notes list] Save note success';\nexport const SAVE_NOTE_ERROR = '[Notes list] Save note error';\n\nexport const DELETE_NOTE_START = '[Notes list] Delete note start';\nexport const DELETE_NOTE_SUCCESS = '[Notes list] Delete note success';\nexport const DELETE_NOTE_ERROR = '[Notes list] Delete note error';\n\nexport class LoadNotesStart implements Action {\n  readonly type = LOAD_NOTES_START;\n}\nexport class LoadNotesSuccess implements Action {\n  readonly type = LOAD_NOTES_SUCCESS;\n  constructor(public payload: { notes: Array }) { }\n}\nexport class LoadNotesError implements Action {\n  readonly type = LOAD_NOTES_ERROR;\n  constructor(public payload: { errorMessage: string }) { }\n}\nexport class SelectNote implements Action {\n  readonly type = SELECT_NOTE;\n  constructor(public payload: { noteId: RawNote['id'] }) { }\n}\nexport class AddNote implements Action {\n  readonly type = ADD_NOTE;\n}\nexport class UpdateNote implements Action {\n  readonly type = UPDATE_NOTE;\n  constructor(public payload: {\n    noteId: RawNote['id'];\n    partialUpdates: PartialNoteUpdates;\n  }) { }\n}\nexport class SaveNoteStart implements Action {\n  readonly type = SAVE_NOTE_START;\n  constructor(public payload: { note: RawNote }) { }\n}\nexport class SaveNoteSuccess implements Action {\n  readonly type = SAVE_NOTE_SUCCESS;\n  constructor(public payload: { noteId: RawNote['id'] }) { }\n}\nexport class SaveNoteError implements Action {\n  readonly type = SAVE_NOTE_ERROR;\n  constructor(public payload: { errorMessage: string }) { }\n}\nexport class DeleteNoteStart implements Action {\n  readonly type = DELETE_NOTE_START;\n  constructor(public payload: {\n    note: RawNote;\n    noteIsSaved: boolean;\n  }) { }\n}\nexport class DeleteNoteSuccess implements Action {\n  readonly type = DELETE_NOTE_SUCCESS;\n}\nexport class DeleteNoteError implements Action {\n  readonly type = DELETE_NOTE_ERROR;\n  constructor(public payload: {\n    note: RawNote,\n    noteIsSaved: boolean,\n    errorMessage: string\n  }) { }\n}\n\nexport type PartialNoteUpdates = Partial>;\n\nexport type All =\n  | LoadNotesStart\n  | LoadNotesSuccess\n  | LoadNotesError\n  | SelectNote\n  | AddNote\n  | UpdateNote\n  | SaveNoteStart\n  | SaveNoteSuccess\n  | SaveNoteError\n  | DeleteNoteStart\n  | DeleteNoteSuccess\n  | DeleteNoteError\n  ;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteNoteError.html":{"url":"classes/DeleteNoteError.html","title":"class - DeleteNoteError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteNoteError\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-store/slices/notes-list/notes-list.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: literal type)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:69\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                                    \n                                                                                literal type\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     literal type\n            \n                                \n                            \n                                \n                                    \n                                        Type :     literal type\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:70\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : DELETE_NOTE_ERROR\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:69\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { RawNote } from '../../../services/raw-note.interface';\n\nexport const LOAD_NOTES_START = '[Notes list] Load notes start';\nexport const LOAD_NOTES_SUCCESS = '[Notes list] Load notes success';\nexport const LOAD_NOTES_ERROR = '[Notes list] Load notes error';\n\nexport const SELECT_NOTE = '[Notes list] Select note';\n\nexport const ADD_NOTE = '[Notes list] Add note';\nexport const UPDATE_NOTE = '[Notes list] Update note';\n\nexport const SAVE_NOTE_START = '[Notes list] Save note start';\nexport const SAVE_NOTE_SUCCESS = '[Notes list] Save note success';\nexport const SAVE_NOTE_ERROR = '[Notes list] Save note error';\n\nexport const DELETE_NOTE_START = '[Notes list] Delete note start';\nexport const DELETE_NOTE_SUCCESS = '[Notes list] Delete note success';\nexport const DELETE_NOTE_ERROR = '[Notes list] Delete note error';\n\nexport class LoadNotesStart implements Action {\n  readonly type = LOAD_NOTES_START;\n}\nexport class LoadNotesSuccess implements Action {\n  readonly type = LOAD_NOTES_SUCCESS;\n  constructor(public payload: { notes: Array }) { }\n}\nexport class LoadNotesError implements Action {\n  readonly type = LOAD_NOTES_ERROR;\n  constructor(public payload: { errorMessage: string }) { }\n}\nexport class SelectNote implements Action {\n  readonly type = SELECT_NOTE;\n  constructor(public payload: { noteId: RawNote['id'] }) { }\n}\nexport class AddNote implements Action {\n  readonly type = ADD_NOTE;\n}\nexport class UpdateNote implements Action {\n  readonly type = UPDATE_NOTE;\n  constructor(public payload: {\n    noteId: RawNote['id'];\n    partialUpdates: PartialNoteUpdates;\n  }) { }\n}\nexport class SaveNoteStart implements Action {\n  readonly type = SAVE_NOTE_START;\n  constructor(public payload: { note: RawNote }) { }\n}\nexport class SaveNoteSuccess implements Action {\n  readonly type = SAVE_NOTE_SUCCESS;\n  constructor(public payload: { noteId: RawNote['id'] }) { }\n}\nexport class SaveNoteError implements Action {\n  readonly type = SAVE_NOTE_ERROR;\n  constructor(public payload: { errorMessage: string }) { }\n}\nexport class DeleteNoteStart implements Action {\n  readonly type = DELETE_NOTE_START;\n  constructor(public payload: {\n    note: RawNote;\n    noteIsSaved: boolean;\n  }) { }\n}\nexport class DeleteNoteSuccess implements Action {\n  readonly type = DELETE_NOTE_SUCCESS;\n}\nexport class DeleteNoteError implements Action {\n  readonly type = DELETE_NOTE_ERROR;\n  constructor(public payload: {\n    note: RawNote,\n    noteIsSaved: boolean,\n    errorMessage: string\n  }) { }\n}\n\nexport type PartialNoteUpdates = Partial>;\n\nexport type All =\n  | LoadNotesStart\n  | LoadNotesSuccess\n  | LoadNotesError\n  | SelectNote\n  | AddNote\n  | UpdateNote\n  | SaveNoteStart\n  | SaveNoteSuccess\n  | SaveNoteError\n  | DeleteNoteStart\n  | DeleteNoteSuccess\n  | DeleteNoteError\n  ;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteNoteStart.html":{"url":"classes/DeleteNoteStart.html","title":"class - DeleteNoteStart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteNoteStart\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-store/slices/notes-list/notes-list.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: literal type)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:59\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                                    \n                                                                                literal type\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     literal type\n            \n                                \n                            \n                                \n                                    \n                                        Type :     literal type\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:60\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : DELETE_NOTE_START\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:59\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { RawNote } from '../../../services/raw-note.interface';\n\nexport const LOAD_NOTES_START = '[Notes list] Load notes start';\nexport const LOAD_NOTES_SUCCESS = '[Notes list] Load notes success';\nexport const LOAD_NOTES_ERROR = '[Notes list] Load notes error';\n\nexport const SELECT_NOTE = '[Notes list] Select note';\n\nexport const ADD_NOTE = '[Notes list] Add note';\nexport const UPDATE_NOTE = '[Notes list] Update note';\n\nexport const SAVE_NOTE_START = '[Notes list] Save note start';\nexport const SAVE_NOTE_SUCCESS = '[Notes list] Save note success';\nexport const SAVE_NOTE_ERROR = '[Notes list] Save note error';\n\nexport const DELETE_NOTE_START = '[Notes list] Delete note start';\nexport const DELETE_NOTE_SUCCESS = '[Notes list] Delete note success';\nexport const DELETE_NOTE_ERROR = '[Notes list] Delete note error';\n\nexport class LoadNotesStart implements Action {\n  readonly type = LOAD_NOTES_START;\n}\nexport class LoadNotesSuccess implements Action {\n  readonly type = LOAD_NOTES_SUCCESS;\n  constructor(public payload: { notes: Array }) { }\n}\nexport class LoadNotesError implements Action {\n  readonly type = LOAD_NOTES_ERROR;\n  constructor(public payload: { errorMessage: string }) { }\n}\nexport class SelectNote implements Action {\n  readonly type = SELECT_NOTE;\n  constructor(public payload: { noteId: RawNote['id'] }) { }\n}\nexport class AddNote implements Action {\n  readonly type = ADD_NOTE;\n}\nexport class UpdateNote implements Action {\n  readonly type = UPDATE_NOTE;\n  constructor(public payload: {\n    noteId: RawNote['id'];\n    partialUpdates: PartialNoteUpdates;\n  }) { }\n}\nexport class SaveNoteStart implements Action {\n  readonly type = SAVE_NOTE_START;\n  constructor(public payload: { note: RawNote }) { }\n}\nexport class SaveNoteSuccess implements Action {\n  readonly type = SAVE_NOTE_SUCCESS;\n  constructor(public payload: { noteId: RawNote['id'] }) { }\n}\nexport class SaveNoteError implements Action {\n  readonly type = SAVE_NOTE_ERROR;\n  constructor(public payload: { errorMessage: string }) { }\n}\nexport class DeleteNoteStart implements Action {\n  readonly type = DELETE_NOTE_START;\n  constructor(public payload: {\n    note: RawNote;\n    noteIsSaved: boolean;\n  }) { }\n}\nexport class DeleteNoteSuccess implements Action {\n  readonly type = DELETE_NOTE_SUCCESS;\n}\nexport class DeleteNoteError implements Action {\n  readonly type = DELETE_NOTE_ERROR;\n  constructor(public payload: {\n    note: RawNote,\n    noteIsSaved: boolean,\n    errorMessage: string\n  }) { }\n}\n\nexport type PartialNoteUpdates = Partial>;\n\nexport type All =\n  | LoadNotesStart\n  | LoadNotesSuccess\n  | LoadNotesError\n  | SelectNote\n  | AddNote\n  | UpdateNote\n  | SaveNoteStart\n  | SaveNoteSuccess\n  | SaveNoteError\n  | DeleteNoteStart\n  | DeleteNoteSuccess\n  | DeleteNoteError\n  ;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteNoteSuccess.html":{"url":"classes/DeleteNoteSuccess.html","title":"class - DeleteNoteSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteNoteSuccess\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-store/slices/notes-list/notes-list.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : DELETE_NOTE_SUCCESS\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:66\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { RawNote } from '../../../services/raw-note.interface';\n\nexport const LOAD_NOTES_START = '[Notes list] Load notes start';\nexport const LOAD_NOTES_SUCCESS = '[Notes list] Load notes success';\nexport const LOAD_NOTES_ERROR = '[Notes list] Load notes error';\n\nexport const SELECT_NOTE = '[Notes list] Select note';\n\nexport const ADD_NOTE = '[Notes list] Add note';\nexport const UPDATE_NOTE = '[Notes list] Update note';\n\nexport const SAVE_NOTE_START = '[Notes list] Save note start';\nexport const SAVE_NOTE_SUCCESS = '[Notes list] Save note success';\nexport const SAVE_NOTE_ERROR = '[Notes list] Save note error';\n\nexport const DELETE_NOTE_START = '[Notes list] Delete note start';\nexport const DELETE_NOTE_SUCCESS = '[Notes list] Delete note success';\nexport const DELETE_NOTE_ERROR = '[Notes list] Delete note error';\n\nexport class LoadNotesStart implements Action {\n  readonly type = LOAD_NOTES_START;\n}\nexport class LoadNotesSuccess implements Action {\n  readonly type = LOAD_NOTES_SUCCESS;\n  constructor(public payload: { notes: Array }) { }\n}\nexport class LoadNotesError implements Action {\n  readonly type = LOAD_NOTES_ERROR;\n  constructor(public payload: { errorMessage: string }) { }\n}\nexport class SelectNote implements Action {\n  readonly type = SELECT_NOTE;\n  constructor(public payload: { noteId: RawNote['id'] }) { }\n}\nexport class AddNote implements Action {\n  readonly type = ADD_NOTE;\n}\nexport class UpdateNote implements Action {\n  readonly type = UPDATE_NOTE;\n  constructor(public payload: {\n    noteId: RawNote['id'];\n    partialUpdates: PartialNoteUpdates;\n  }) { }\n}\nexport class SaveNoteStart implements Action {\n  readonly type = SAVE_NOTE_START;\n  constructor(public payload: { note: RawNote }) { }\n}\nexport class SaveNoteSuccess implements Action {\n  readonly type = SAVE_NOTE_SUCCESS;\n  constructor(public payload: { noteId: RawNote['id'] }) { }\n}\nexport class SaveNoteError implements Action {\n  readonly type = SAVE_NOTE_ERROR;\n  constructor(public payload: { errorMessage: string }) { }\n}\nexport class DeleteNoteStart implements Action {\n  readonly type = DELETE_NOTE_START;\n  constructor(public payload: {\n    note: RawNote;\n    noteIsSaved: boolean;\n  }) { }\n}\nexport class DeleteNoteSuccess implements Action {\n  readonly type = DELETE_NOTE_SUCCESS;\n}\nexport class DeleteNoteError implements Action {\n  readonly type = DELETE_NOTE_ERROR;\n  constructor(public payload: {\n    note: RawNote,\n    noteIsSaved: boolean,\n    errorMessage: string\n  }) { }\n}\n\nexport type PartialNoteUpdates = Partial>;\n\nexport type All =\n  | LoadNotesStart\n  | LoadNotesSuccess\n  | LoadNotesError\n  | SelectNote\n  | AddNote\n  | UpdateNote\n  | SaveNoteStart\n  | SaveNoteSuccess\n  | SaveNoteError\n  | DeleteNoteStart\n  | DeleteNoteSuccess\n  | DeleteNoteError\n  ;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadNotesError.html":{"url":"classes/LoadNotesError.html","title":"class - LoadNotesError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadNotesError\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-store/slices/notes-list/notes-list.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: literal type)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:29\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                                    \n                                                                                literal type\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     literal type\n            \n                                \n                            \n                                \n                                    \n                                        Type :     literal type\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:30\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : LOAD_NOTES_ERROR\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:29\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { RawNote } from '../../../services/raw-note.interface';\n\nexport const LOAD_NOTES_START = '[Notes list] Load notes start';\nexport const LOAD_NOTES_SUCCESS = '[Notes list] Load notes success';\nexport const LOAD_NOTES_ERROR = '[Notes list] Load notes error';\n\nexport const SELECT_NOTE = '[Notes list] Select note';\n\nexport const ADD_NOTE = '[Notes list] Add note';\nexport const UPDATE_NOTE = '[Notes list] Update note';\n\nexport const SAVE_NOTE_START = '[Notes list] Save note start';\nexport const SAVE_NOTE_SUCCESS = '[Notes list] Save note success';\nexport const SAVE_NOTE_ERROR = '[Notes list] Save note error';\n\nexport const DELETE_NOTE_START = '[Notes list] Delete note start';\nexport const DELETE_NOTE_SUCCESS = '[Notes list] Delete note success';\nexport const DELETE_NOTE_ERROR = '[Notes list] Delete note error';\n\nexport class LoadNotesStart implements Action {\n  readonly type = LOAD_NOTES_START;\n}\nexport class LoadNotesSuccess implements Action {\n  readonly type = LOAD_NOTES_SUCCESS;\n  constructor(public payload: { notes: Array }) { }\n}\nexport class LoadNotesError implements Action {\n  readonly type = LOAD_NOTES_ERROR;\n  constructor(public payload: { errorMessage: string }) { }\n}\nexport class SelectNote implements Action {\n  readonly type = SELECT_NOTE;\n  constructor(public payload: { noteId: RawNote['id'] }) { }\n}\nexport class AddNote implements Action {\n  readonly type = ADD_NOTE;\n}\nexport class UpdateNote implements Action {\n  readonly type = UPDATE_NOTE;\n  constructor(public payload: {\n    noteId: RawNote['id'];\n    partialUpdates: PartialNoteUpdates;\n  }) { }\n}\nexport class SaveNoteStart implements Action {\n  readonly type = SAVE_NOTE_START;\n  constructor(public payload: { note: RawNote }) { }\n}\nexport class SaveNoteSuccess implements Action {\n  readonly type = SAVE_NOTE_SUCCESS;\n  constructor(public payload: { noteId: RawNote['id'] }) { }\n}\nexport class SaveNoteError implements Action {\n  readonly type = SAVE_NOTE_ERROR;\n  constructor(public payload: { errorMessage: string }) { }\n}\nexport class DeleteNoteStart implements Action {\n  readonly type = DELETE_NOTE_START;\n  constructor(public payload: {\n    note: RawNote;\n    noteIsSaved: boolean;\n  }) { }\n}\nexport class DeleteNoteSuccess implements Action {\n  readonly type = DELETE_NOTE_SUCCESS;\n}\nexport class DeleteNoteError implements Action {\n  readonly type = DELETE_NOTE_ERROR;\n  constructor(public payload: {\n    note: RawNote,\n    noteIsSaved: boolean,\n    errorMessage: string\n  }) { }\n}\n\nexport type PartialNoteUpdates = Partial>;\n\nexport type All =\n  | LoadNotesStart\n  | LoadNotesSuccess\n  | LoadNotesError\n  | SelectNote\n  | AddNote\n  | UpdateNote\n  | SaveNoteStart\n  | SaveNoteSuccess\n  | SaveNoteError\n  | DeleteNoteStart\n  | DeleteNoteSuccess\n  | DeleteNoteError\n  ;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadNotesStart.html":{"url":"classes/LoadNotesStart.html","title":"class - LoadNotesStart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadNotesStart\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-store/slices/notes-list/notes-list.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : LOAD_NOTES_START\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:22\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { RawNote } from '../../../services/raw-note.interface';\n\nexport const LOAD_NOTES_START = '[Notes list] Load notes start';\nexport const LOAD_NOTES_SUCCESS = '[Notes list] Load notes success';\nexport const LOAD_NOTES_ERROR = '[Notes list] Load notes error';\n\nexport const SELECT_NOTE = '[Notes list] Select note';\n\nexport const ADD_NOTE = '[Notes list] Add note';\nexport const UPDATE_NOTE = '[Notes list] Update note';\n\nexport const SAVE_NOTE_START = '[Notes list] Save note start';\nexport const SAVE_NOTE_SUCCESS = '[Notes list] Save note success';\nexport const SAVE_NOTE_ERROR = '[Notes list] Save note error';\n\nexport const DELETE_NOTE_START = '[Notes list] Delete note start';\nexport const DELETE_NOTE_SUCCESS = '[Notes list] Delete note success';\nexport const DELETE_NOTE_ERROR = '[Notes list] Delete note error';\n\nexport class LoadNotesStart implements Action {\n  readonly type = LOAD_NOTES_START;\n}\nexport class LoadNotesSuccess implements Action {\n  readonly type = LOAD_NOTES_SUCCESS;\n  constructor(public payload: { notes: Array }) { }\n}\nexport class LoadNotesError implements Action {\n  readonly type = LOAD_NOTES_ERROR;\n  constructor(public payload: { errorMessage: string }) { }\n}\nexport class SelectNote implements Action {\n  readonly type = SELECT_NOTE;\n  constructor(public payload: { noteId: RawNote['id'] }) { }\n}\nexport class AddNote implements Action {\n  readonly type = ADD_NOTE;\n}\nexport class UpdateNote implements Action {\n  readonly type = UPDATE_NOTE;\n  constructor(public payload: {\n    noteId: RawNote['id'];\n    partialUpdates: PartialNoteUpdates;\n  }) { }\n}\nexport class SaveNoteStart implements Action {\n  readonly type = SAVE_NOTE_START;\n  constructor(public payload: { note: RawNote }) { }\n}\nexport class SaveNoteSuccess implements Action {\n  readonly type = SAVE_NOTE_SUCCESS;\n  constructor(public payload: { noteId: RawNote['id'] }) { }\n}\nexport class SaveNoteError implements Action {\n  readonly type = SAVE_NOTE_ERROR;\n  constructor(public payload: { errorMessage: string }) { }\n}\nexport class DeleteNoteStart implements Action {\n  readonly type = DELETE_NOTE_START;\n  constructor(public payload: {\n    note: RawNote;\n    noteIsSaved: boolean;\n  }) { }\n}\nexport class DeleteNoteSuccess implements Action {\n  readonly type = DELETE_NOTE_SUCCESS;\n}\nexport class DeleteNoteError implements Action {\n  readonly type = DELETE_NOTE_ERROR;\n  constructor(public payload: {\n    note: RawNote,\n    noteIsSaved: boolean,\n    errorMessage: string\n  }) { }\n}\n\nexport type PartialNoteUpdates = Partial>;\n\nexport type All =\n  | LoadNotesStart\n  | LoadNotesSuccess\n  | LoadNotesError\n  | SelectNote\n  | AddNote\n  | UpdateNote\n  | SaveNoteStart\n  | SaveNoteSuccess\n  | SaveNoteError\n  | DeleteNoteStart\n  | DeleteNoteSuccess\n  | DeleteNoteError\n  ;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadNotesSuccess.html":{"url":"classes/LoadNotesSuccess.html","title":"class - LoadNotesSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadNotesSuccess\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-store/slices/notes-list/notes-list.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: literal type)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:25\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                                    \n                                                                                literal type\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     literal type\n            \n                                \n                            \n                                \n                                    \n                                        Type :     literal type\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:26\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : LOAD_NOTES_SUCCESS\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:25\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { RawNote } from '../../../services/raw-note.interface';\n\nexport const LOAD_NOTES_START = '[Notes list] Load notes start';\nexport const LOAD_NOTES_SUCCESS = '[Notes list] Load notes success';\nexport const LOAD_NOTES_ERROR = '[Notes list] Load notes error';\n\nexport const SELECT_NOTE = '[Notes list] Select note';\n\nexport const ADD_NOTE = '[Notes list] Add note';\nexport const UPDATE_NOTE = '[Notes list] Update note';\n\nexport const SAVE_NOTE_START = '[Notes list] Save note start';\nexport const SAVE_NOTE_SUCCESS = '[Notes list] Save note success';\nexport const SAVE_NOTE_ERROR = '[Notes list] Save note error';\n\nexport const DELETE_NOTE_START = '[Notes list] Delete note start';\nexport const DELETE_NOTE_SUCCESS = '[Notes list] Delete note success';\nexport const DELETE_NOTE_ERROR = '[Notes list] Delete note error';\n\nexport class LoadNotesStart implements Action {\n  readonly type = LOAD_NOTES_START;\n}\nexport class LoadNotesSuccess implements Action {\n  readonly type = LOAD_NOTES_SUCCESS;\n  constructor(public payload: { notes: Array }) { }\n}\nexport class LoadNotesError implements Action {\n  readonly type = LOAD_NOTES_ERROR;\n  constructor(public payload: { errorMessage: string }) { }\n}\nexport class SelectNote implements Action {\n  readonly type = SELECT_NOTE;\n  constructor(public payload: { noteId: RawNote['id'] }) { }\n}\nexport class AddNote implements Action {\n  readonly type = ADD_NOTE;\n}\nexport class UpdateNote implements Action {\n  readonly type = UPDATE_NOTE;\n  constructor(public payload: {\n    noteId: RawNote['id'];\n    partialUpdates: PartialNoteUpdates;\n  }) { }\n}\nexport class SaveNoteStart implements Action {\n  readonly type = SAVE_NOTE_START;\n  constructor(public payload: { note: RawNote }) { }\n}\nexport class SaveNoteSuccess implements Action {\n  readonly type = SAVE_NOTE_SUCCESS;\n  constructor(public payload: { noteId: RawNote['id'] }) { }\n}\nexport class SaveNoteError implements Action {\n  readonly type = SAVE_NOTE_ERROR;\n  constructor(public payload: { errorMessage: string }) { }\n}\nexport class DeleteNoteStart implements Action {\n  readonly type = DELETE_NOTE_START;\n  constructor(public payload: {\n    note: RawNote;\n    noteIsSaved: boolean;\n  }) { }\n}\nexport class DeleteNoteSuccess implements Action {\n  readonly type = DELETE_NOTE_SUCCESS;\n}\nexport class DeleteNoteError implements Action {\n  readonly type = DELETE_NOTE_ERROR;\n  constructor(public payload: {\n    note: RawNote,\n    noteIsSaved: boolean,\n    errorMessage: string\n  }) { }\n}\n\nexport type PartialNoteUpdates = Partial>;\n\nexport type All =\n  | LoadNotesStart\n  | LoadNotesSuccess\n  | LoadNotesError\n  | SelectNote\n  | AddNote\n  | UpdateNote\n  | SaveNoteStart\n  | SaveNoteSuccess\n  | SaveNoteError\n  | DeleteNoteStart\n  | DeleteNoteSuccess\n  | DeleteNoteError\n  ;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveNoteError.html":{"url":"classes/SaveNoteError.html","title":"class - SaveNoteError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveNoteError\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-store/slices/notes-list/notes-list.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: literal type)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:55\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                                    \n                                                                                literal type\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     literal type\n            \n                                \n                            \n                                \n                                    \n                                        Type :     literal type\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:56\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : SAVE_NOTE_ERROR\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:55\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { RawNote } from '../../../services/raw-note.interface';\n\nexport const LOAD_NOTES_START = '[Notes list] Load notes start';\nexport const LOAD_NOTES_SUCCESS = '[Notes list] Load notes success';\nexport const LOAD_NOTES_ERROR = '[Notes list] Load notes error';\n\nexport const SELECT_NOTE = '[Notes list] Select note';\n\nexport const ADD_NOTE = '[Notes list] Add note';\nexport const UPDATE_NOTE = '[Notes list] Update note';\n\nexport const SAVE_NOTE_START = '[Notes list] Save note start';\nexport const SAVE_NOTE_SUCCESS = '[Notes list] Save note success';\nexport const SAVE_NOTE_ERROR = '[Notes list] Save note error';\n\nexport const DELETE_NOTE_START = '[Notes list] Delete note start';\nexport const DELETE_NOTE_SUCCESS = '[Notes list] Delete note success';\nexport const DELETE_NOTE_ERROR = '[Notes list] Delete note error';\n\nexport class LoadNotesStart implements Action {\n  readonly type = LOAD_NOTES_START;\n}\nexport class LoadNotesSuccess implements Action {\n  readonly type = LOAD_NOTES_SUCCESS;\n  constructor(public payload: { notes: Array }) { }\n}\nexport class LoadNotesError implements Action {\n  readonly type = LOAD_NOTES_ERROR;\n  constructor(public payload: { errorMessage: string }) { }\n}\nexport class SelectNote implements Action {\n  readonly type = SELECT_NOTE;\n  constructor(public payload: { noteId: RawNote['id'] }) { }\n}\nexport class AddNote implements Action {\n  readonly type = ADD_NOTE;\n}\nexport class UpdateNote implements Action {\n  readonly type = UPDATE_NOTE;\n  constructor(public payload: {\n    noteId: RawNote['id'];\n    partialUpdates: PartialNoteUpdates;\n  }) { }\n}\nexport class SaveNoteStart implements Action {\n  readonly type = SAVE_NOTE_START;\n  constructor(public payload: { note: RawNote }) { }\n}\nexport class SaveNoteSuccess implements Action {\n  readonly type = SAVE_NOTE_SUCCESS;\n  constructor(public payload: { noteId: RawNote['id'] }) { }\n}\nexport class SaveNoteError implements Action {\n  readonly type = SAVE_NOTE_ERROR;\n  constructor(public payload: { errorMessage: string }) { }\n}\nexport class DeleteNoteStart implements Action {\n  readonly type = DELETE_NOTE_START;\n  constructor(public payload: {\n    note: RawNote;\n    noteIsSaved: boolean;\n  }) { }\n}\nexport class DeleteNoteSuccess implements Action {\n  readonly type = DELETE_NOTE_SUCCESS;\n}\nexport class DeleteNoteError implements Action {\n  readonly type = DELETE_NOTE_ERROR;\n  constructor(public payload: {\n    note: RawNote,\n    noteIsSaved: boolean,\n    errorMessage: string\n  }) { }\n}\n\nexport type PartialNoteUpdates = Partial>;\n\nexport type All =\n  | LoadNotesStart\n  | LoadNotesSuccess\n  | LoadNotesError\n  | SelectNote\n  | AddNote\n  | UpdateNote\n  | SaveNoteStart\n  | SaveNoteSuccess\n  | SaveNoteError\n  | DeleteNoteStart\n  | DeleteNoteSuccess\n  | DeleteNoteError\n  ;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveNoteStart.html":{"url":"classes/SaveNoteStart.html","title":"class - SaveNoteStart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveNoteStart\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-store/slices/notes-list/notes-list.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: literal type)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:47\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                                    \n                                                                                literal type\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     literal type\n            \n                                \n                            \n                                \n                                    \n                                        Type :     literal type\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:48\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : SAVE_NOTE_START\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:47\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { RawNote } from '../../../services/raw-note.interface';\n\nexport const LOAD_NOTES_START = '[Notes list] Load notes start';\nexport const LOAD_NOTES_SUCCESS = '[Notes list] Load notes success';\nexport const LOAD_NOTES_ERROR = '[Notes list] Load notes error';\n\nexport const SELECT_NOTE = '[Notes list] Select note';\n\nexport const ADD_NOTE = '[Notes list] Add note';\nexport const UPDATE_NOTE = '[Notes list] Update note';\n\nexport const SAVE_NOTE_START = '[Notes list] Save note start';\nexport const SAVE_NOTE_SUCCESS = '[Notes list] Save note success';\nexport const SAVE_NOTE_ERROR = '[Notes list] Save note error';\n\nexport const DELETE_NOTE_START = '[Notes list] Delete note start';\nexport const DELETE_NOTE_SUCCESS = '[Notes list] Delete note success';\nexport const DELETE_NOTE_ERROR = '[Notes list] Delete note error';\n\nexport class LoadNotesStart implements Action {\n  readonly type = LOAD_NOTES_START;\n}\nexport class LoadNotesSuccess implements Action {\n  readonly type = LOAD_NOTES_SUCCESS;\n  constructor(public payload: { notes: Array }) { }\n}\nexport class LoadNotesError implements Action {\n  readonly type = LOAD_NOTES_ERROR;\n  constructor(public payload: { errorMessage: string }) { }\n}\nexport class SelectNote implements Action {\n  readonly type = SELECT_NOTE;\n  constructor(public payload: { noteId: RawNote['id'] }) { }\n}\nexport class AddNote implements Action {\n  readonly type = ADD_NOTE;\n}\nexport class UpdateNote implements Action {\n  readonly type = UPDATE_NOTE;\n  constructor(public payload: {\n    noteId: RawNote['id'];\n    partialUpdates: PartialNoteUpdates;\n  }) { }\n}\nexport class SaveNoteStart implements Action {\n  readonly type = SAVE_NOTE_START;\n  constructor(public payload: { note: RawNote }) { }\n}\nexport class SaveNoteSuccess implements Action {\n  readonly type = SAVE_NOTE_SUCCESS;\n  constructor(public payload: { noteId: RawNote['id'] }) { }\n}\nexport class SaveNoteError implements Action {\n  readonly type = SAVE_NOTE_ERROR;\n  constructor(public payload: { errorMessage: string }) { }\n}\nexport class DeleteNoteStart implements Action {\n  readonly type = DELETE_NOTE_START;\n  constructor(public payload: {\n    note: RawNote;\n    noteIsSaved: boolean;\n  }) { }\n}\nexport class DeleteNoteSuccess implements Action {\n  readonly type = DELETE_NOTE_SUCCESS;\n}\nexport class DeleteNoteError implements Action {\n  readonly type = DELETE_NOTE_ERROR;\n  constructor(public payload: {\n    note: RawNote,\n    noteIsSaved: boolean,\n    errorMessage: string\n  }) { }\n}\n\nexport type PartialNoteUpdates = Partial>;\n\nexport type All =\n  | LoadNotesStart\n  | LoadNotesSuccess\n  | LoadNotesError\n  | SelectNote\n  | AddNote\n  | UpdateNote\n  | SaveNoteStart\n  | SaveNoteSuccess\n  | SaveNoteError\n  | DeleteNoteStart\n  | DeleteNoteSuccess\n  | DeleteNoteError\n  ;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveNoteSuccess.html":{"url":"classes/SaveNoteSuccess.html","title":"class - SaveNoteSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveNoteSuccess\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-store/slices/notes-list/notes-list.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: literal type)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:51\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                                    \n                                                                                literal type\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     literal type\n            \n                                \n                            \n                                \n                                    \n                                        Type :     literal type\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:52\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : SAVE_NOTE_SUCCESS\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:51\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { RawNote } from '../../../services/raw-note.interface';\n\nexport const LOAD_NOTES_START = '[Notes list] Load notes start';\nexport const LOAD_NOTES_SUCCESS = '[Notes list] Load notes success';\nexport const LOAD_NOTES_ERROR = '[Notes list] Load notes error';\n\nexport const SELECT_NOTE = '[Notes list] Select note';\n\nexport const ADD_NOTE = '[Notes list] Add note';\nexport const UPDATE_NOTE = '[Notes list] Update note';\n\nexport const SAVE_NOTE_START = '[Notes list] Save note start';\nexport const SAVE_NOTE_SUCCESS = '[Notes list] Save note success';\nexport const SAVE_NOTE_ERROR = '[Notes list] Save note error';\n\nexport const DELETE_NOTE_START = '[Notes list] Delete note start';\nexport const DELETE_NOTE_SUCCESS = '[Notes list] Delete note success';\nexport const DELETE_NOTE_ERROR = '[Notes list] Delete note error';\n\nexport class LoadNotesStart implements Action {\n  readonly type = LOAD_NOTES_START;\n}\nexport class LoadNotesSuccess implements Action {\n  readonly type = LOAD_NOTES_SUCCESS;\n  constructor(public payload: { notes: Array }) { }\n}\nexport class LoadNotesError implements Action {\n  readonly type = LOAD_NOTES_ERROR;\n  constructor(public payload: { errorMessage: string }) { }\n}\nexport class SelectNote implements Action {\n  readonly type = SELECT_NOTE;\n  constructor(public payload: { noteId: RawNote['id'] }) { }\n}\nexport class AddNote implements Action {\n  readonly type = ADD_NOTE;\n}\nexport class UpdateNote implements Action {\n  readonly type = UPDATE_NOTE;\n  constructor(public payload: {\n    noteId: RawNote['id'];\n    partialUpdates: PartialNoteUpdates;\n  }) { }\n}\nexport class SaveNoteStart implements Action {\n  readonly type = SAVE_NOTE_START;\n  constructor(public payload: { note: RawNote }) { }\n}\nexport class SaveNoteSuccess implements Action {\n  readonly type = SAVE_NOTE_SUCCESS;\n  constructor(public payload: { noteId: RawNote['id'] }) { }\n}\nexport class SaveNoteError implements Action {\n  readonly type = SAVE_NOTE_ERROR;\n  constructor(public payload: { errorMessage: string }) { }\n}\nexport class DeleteNoteStart implements Action {\n  readonly type = DELETE_NOTE_START;\n  constructor(public payload: {\n    note: RawNote;\n    noteIsSaved: boolean;\n  }) { }\n}\nexport class DeleteNoteSuccess implements Action {\n  readonly type = DELETE_NOTE_SUCCESS;\n}\nexport class DeleteNoteError implements Action {\n  readonly type = DELETE_NOTE_ERROR;\n  constructor(public payload: {\n    note: RawNote,\n    noteIsSaved: boolean,\n    errorMessage: string\n  }) { }\n}\n\nexport type PartialNoteUpdates = Partial>;\n\nexport type All =\n  | LoadNotesStart\n  | LoadNotesSuccess\n  | LoadNotesError\n  | SelectNote\n  | AddNote\n  | UpdateNote\n  | SaveNoteStart\n  | SaveNoteSuccess\n  | SaveNoteError\n  | DeleteNoteStart\n  | DeleteNoteSuccess\n  | DeleteNoteError\n  ;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectNote.html":{"url":"classes/SelectNote.html","title":"class - SelectNote","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectNote\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-store/slices/notes-list/notes-list.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: literal type)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:33\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                                    \n                                                                                literal type\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     literal type\n            \n                                \n                            \n                                \n                                    \n                                        Type :     literal type\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:34\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : SELECT_NOTE\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:33\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { RawNote } from '../../../services/raw-note.interface';\n\nexport const LOAD_NOTES_START = '[Notes list] Load notes start';\nexport const LOAD_NOTES_SUCCESS = '[Notes list] Load notes success';\nexport const LOAD_NOTES_ERROR = '[Notes list] Load notes error';\n\nexport const SELECT_NOTE = '[Notes list] Select note';\n\nexport const ADD_NOTE = '[Notes list] Add note';\nexport const UPDATE_NOTE = '[Notes list] Update note';\n\nexport const SAVE_NOTE_START = '[Notes list] Save note start';\nexport const SAVE_NOTE_SUCCESS = '[Notes list] Save note success';\nexport const SAVE_NOTE_ERROR = '[Notes list] Save note error';\n\nexport const DELETE_NOTE_START = '[Notes list] Delete note start';\nexport const DELETE_NOTE_SUCCESS = '[Notes list] Delete note success';\nexport const DELETE_NOTE_ERROR = '[Notes list] Delete note error';\n\nexport class LoadNotesStart implements Action {\n  readonly type = LOAD_NOTES_START;\n}\nexport class LoadNotesSuccess implements Action {\n  readonly type = LOAD_NOTES_SUCCESS;\n  constructor(public payload: { notes: Array }) { }\n}\nexport class LoadNotesError implements Action {\n  readonly type = LOAD_NOTES_ERROR;\n  constructor(public payload: { errorMessage: string }) { }\n}\nexport class SelectNote implements Action {\n  readonly type = SELECT_NOTE;\n  constructor(public payload: { noteId: RawNote['id'] }) { }\n}\nexport class AddNote implements Action {\n  readonly type = ADD_NOTE;\n}\nexport class UpdateNote implements Action {\n  readonly type = UPDATE_NOTE;\n  constructor(public payload: {\n    noteId: RawNote['id'];\n    partialUpdates: PartialNoteUpdates;\n  }) { }\n}\nexport class SaveNoteStart implements Action {\n  readonly type = SAVE_NOTE_START;\n  constructor(public payload: { note: RawNote }) { }\n}\nexport class SaveNoteSuccess implements Action {\n  readonly type = SAVE_NOTE_SUCCESS;\n  constructor(public payload: { noteId: RawNote['id'] }) { }\n}\nexport class SaveNoteError implements Action {\n  readonly type = SAVE_NOTE_ERROR;\n  constructor(public payload: { errorMessage: string }) { }\n}\nexport class DeleteNoteStart implements Action {\n  readonly type = DELETE_NOTE_START;\n  constructor(public payload: {\n    note: RawNote;\n    noteIsSaved: boolean;\n  }) { }\n}\nexport class DeleteNoteSuccess implements Action {\n  readonly type = DELETE_NOTE_SUCCESS;\n}\nexport class DeleteNoteError implements Action {\n  readonly type = DELETE_NOTE_ERROR;\n  constructor(public payload: {\n    note: RawNote,\n    noteIsSaved: boolean,\n    errorMessage: string\n  }) { }\n}\n\nexport type PartialNoteUpdates = Partial>;\n\nexport type All =\n  | LoadNotesStart\n  | LoadNotesSuccess\n  | LoadNotesError\n  | SelectNote\n  | AddNote\n  | UpdateNote\n  | SaveNoteStart\n  | SaveNoteSuccess\n  | SaveNoteError\n  | DeleteNoteStart\n  | DeleteNoteSuccess\n  | DeleteNoteError\n  ;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNote.html":{"url":"classes/UpdateNote.html","title":"class - UpdateNote","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNote\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-store/slices/notes-list/notes-list.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: literal type)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:40\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                                    \n                                                                                literal type\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     literal type\n            \n                                \n                            \n                                \n                                    \n                                        Type :     literal type\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:41\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : UPDATE_NOTE\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list.actions.ts:40\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { RawNote } from '../../../services/raw-note.interface';\n\nexport const LOAD_NOTES_START = '[Notes list] Load notes start';\nexport const LOAD_NOTES_SUCCESS = '[Notes list] Load notes success';\nexport const LOAD_NOTES_ERROR = '[Notes list] Load notes error';\n\nexport const SELECT_NOTE = '[Notes list] Select note';\n\nexport const ADD_NOTE = '[Notes list] Add note';\nexport const UPDATE_NOTE = '[Notes list] Update note';\n\nexport const SAVE_NOTE_START = '[Notes list] Save note start';\nexport const SAVE_NOTE_SUCCESS = '[Notes list] Save note success';\nexport const SAVE_NOTE_ERROR = '[Notes list] Save note error';\n\nexport const DELETE_NOTE_START = '[Notes list] Delete note start';\nexport const DELETE_NOTE_SUCCESS = '[Notes list] Delete note success';\nexport const DELETE_NOTE_ERROR = '[Notes list] Delete note error';\n\nexport class LoadNotesStart implements Action {\n  readonly type = LOAD_NOTES_START;\n}\nexport class LoadNotesSuccess implements Action {\n  readonly type = LOAD_NOTES_SUCCESS;\n  constructor(public payload: { notes: Array }) { }\n}\nexport class LoadNotesError implements Action {\n  readonly type = LOAD_NOTES_ERROR;\n  constructor(public payload: { errorMessage: string }) { }\n}\nexport class SelectNote implements Action {\n  readonly type = SELECT_NOTE;\n  constructor(public payload: { noteId: RawNote['id'] }) { }\n}\nexport class AddNote implements Action {\n  readonly type = ADD_NOTE;\n}\nexport class UpdateNote implements Action {\n  readonly type = UPDATE_NOTE;\n  constructor(public payload: {\n    noteId: RawNote['id'];\n    partialUpdates: PartialNoteUpdates;\n  }) { }\n}\nexport class SaveNoteStart implements Action {\n  readonly type = SAVE_NOTE_START;\n  constructor(public payload: { note: RawNote }) { }\n}\nexport class SaveNoteSuccess implements Action {\n  readonly type = SAVE_NOTE_SUCCESS;\n  constructor(public payload: { noteId: RawNote['id'] }) { }\n}\nexport class SaveNoteError implements Action {\n  readonly type = SAVE_NOTE_ERROR;\n  constructor(public payload: { errorMessage: string }) { }\n}\nexport class DeleteNoteStart implements Action {\n  readonly type = DELETE_NOTE_START;\n  constructor(public payload: {\n    note: RawNote;\n    noteIsSaved: boolean;\n  }) { }\n}\nexport class DeleteNoteSuccess implements Action {\n  readonly type = DELETE_NOTE_SUCCESS;\n}\nexport class DeleteNoteError implements Action {\n  readonly type = DELETE_NOTE_ERROR;\n  constructor(public payload: {\n    note: RawNote,\n    noteIsSaved: boolean,\n    errorMessage: string\n  }) { }\n}\n\nexport type PartialNoteUpdates = Partial>;\n\nexport type All =\n  | LoadNotesStart\n  | LoadNotesSuccess\n  | LoadNotesError\n  | SelectNote\n  | AddNote\n  | UpdateNote\n  | SaveNoteStart\n  | SaveNoteSuccess\n  | SaveNoteError\n  | DeleteNoteStart\n  | DeleteNoteSuccess\n  | DeleteNoteError\n  ;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSearchByKeywords.html":{"url":"classes/UpdateSearchByKeywords.html","title":"class - UpdateSearchByKeywords","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSearchByKeywords\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-store/slices/search-params/search-params.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: literal type)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/search-params/search-params.actions.ts:6\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                                    \n                                                                                literal type\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     literal type\n            \n                                \n                            \n                                \n                                    \n                                        Type :     literal type\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/search-params/search-params.actions.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : UPDATE_SEARCH_BY_KEYWORDS\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/state-store/slices/search-params/search-params.actions.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const UPDATE_SEARCH_BY_KEYWORDS = '[Search params] Update search by keywords';\n\nexport class UpdateSearchByKeywords implements Action {\n  readonly type = UPDATE_SEARCH_BY_KEYWORDS;\n  constructor(public payload: { searchByKeywords: Array }) { }\n}\n\nexport type All =\n  | UpdateSearchByKeywords\n  ;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppState\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-store/app-state.module.ts\n        \n\n            \n                Description\n            \n            \n                Global App state\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        notesList\n                                \n                                \n                                        searchParams\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        notesList\n                                    \n                                \n                                \n                                    \n                                        notesList:     NotesListState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NotesListState\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/state-store/app-state.module.ts:17\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchParams\n                                    \n                                \n                                \n                                    \n                                        searchParams:     SearchParamsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SearchParamsState\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/state-store/app-state.module.ts:18\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { StoreModule, ActionReducerMap } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { storeFreeze } from 'ngrx-store-freeze';\nimport { environment } from '../../environments/environment';\nimport { NotesListState } from './slices/notes-list/notes-list-state.interface';\nimport { SearchParamsState } from './slices/search-params/search-params-state.interface';\nimport { notesListReducer } from './slices/notes-list/notes-list.reducer';\nimport { searchParamsReducer } from './slices/search-params/search-params.reducer';\nimport { NotesListEffects } from './slices/notes-list/notes-list.effetcs';\n\n/**\n * Global App state\n */\nexport interface AppState {\n  notesList: NotesListState;\n  searchParams: SearchParamsState;\n}\n\nconst reducers: ActionReducerMap = {\n  notesList: notesListReducer,\n  searchParams: searchParamsReducer,\n};\n\nconst effects = [ NotesListEffects ];\n\n// Use strict equality in ternary statements below because otherwise Webpack uses incorrect value when assembles bundle\n@NgModule({\n  imports: [\n    StoreModule.forRoot(\n      reducers,\n      // Freeze state in dev mode to avoid unintentional mutations\n      { metaReducers: environment.production === false ? [ storeFreeze ] : [] }\n    ),\n    environment.production === false ? StoreDevtoolsModule.instrument() : [],\n    EffectsModule.forRoot(effects),\n  ],\n})\nexport class AppStateModule { }\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Note.html":{"url":"interfaces/Note.html","title":"interface - Note","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Note\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-store/selectors/note.interface.ts\n        \n\n            \n                Description\n            \n            \n                Note view model.\nHas structure and properties\nthat make it convenient to process in views (presentational components).\nAll properties are readonly for immutability purposes.\n\n            \n\n            \n                Extends\n            \n            \n                    RawNote\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isSaved\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isSaved\n                                    \n                                \n                                \n                                    \n                                        isSaved:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/state-store/selectors/note.interface.ts:13\n                                        \n                                    \n\n                            \n                                \n                                    Indicates if note is saved on back-end.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RawNote } from '../../services/raw-note.interface';\n\n/**\n * Note view model.\n * Has structure and properties\n * that make it convenient to process in views (presentational components).\n * All properties are readonly for immutability purposes.\n */\nexport interface Note extends RawNote {\n  /**\n   * Indicates if note is saved on back-end.\n   */\n  readonly isSaved: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NotesListState.html":{"url":"interfaces/NotesListState.html","title":"interface - NotesListState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NotesListState\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-store/slices/notes-list/notes-list-state.interface.ts\n        \n\n            \n                Description\n            \n            \n                Contains all data related to notes list state slice.\nAll properties are readonly for immutability purposes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        errorMessage\n                                \n                                \n                                        isLoading\n                                \n                                \n                                        isSaving\n                                \n                                \n                                        loaded\n                                \n                                \n                                        savedEntities\n                                \n                                \n                                        selectedNoteId\n                                \n                                \n                                        unsavedEntities\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessage\n                                    \n                                \n                                \n                                    \n                                        errorMessage:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list-state.interface.ts:14\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isLoading\n                                    \n                                \n                                \n                                    \n                                        isLoading:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list-state.interface.ts:11\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSaving\n                                    \n                                \n                                \n                                    \n                                        isSaving:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list-state.interface.ts:13\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                    \n                                \n                                \n                                    \n                                        loaded:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list-state.interface.ts:12\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        savedEntities\n                                    \n                                \n                                \n                                    \n                                        savedEntities:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list-state.interface.ts:8\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedNoteId\n                                    \n                                \n                                \n                                    \n                                        selectedNoteId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list-state.interface.ts:10\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unsavedEntities\n                                    \n                                \n                                \n                                    \n                                        unsavedEntities:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/state-store/slices/notes-list/notes-list-state.interface.ts:9\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { RawNote } from '../../../services/raw-note.interface';\n\n/**\n * Contains all data related to notes list state slice.\n * All properties are readonly for immutability purposes.\n */\nexport interface NotesListState {\n  readonly savedEntities: { [id: string]: RawNote };\n  readonly unsavedEntities: { [id: string]: RawNote };\n  readonly selectedNoteId: string;\n  readonly isLoading: boolean;\n  readonly loaded: boolean;\n  readonly isSaving: boolean;\n  readonly errorMessage: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RawNote.html":{"url":"interfaces/RawNote.html","title":"interface - RawNote","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RawNote\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/raw-note.interface.ts\n        \n\n            \n                Description\n            \n            \n                Raw note data.\nNotes are serialized and stored on back-end in this shape.\nAll properties are readonly for immutability purposes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        caption\n                                \n                                \n                                        id\n                                \n                                \n                                        keywords\n                                \n                                \n                                        text\n                                \n                                \n                                        timeStamp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                    \n                                \n                                \n                                    \n                                        caption:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/services/raw-note.interface.ts:8\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/services/raw-note.interface.ts:7\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keywords\n                                    \n                                \n                                \n                                    \n                                        keywords:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/services/raw-note.interface.ts:10\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/services/raw-note.interface.ts:9\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeStamp\n                                    \n                                \n                                \n                                    \n                                        timeStamp:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/services/raw-note.interface.ts:14\n                                        \n                                    \n\n                            \n                                \n                                    ISO time stamp string.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface RawNote {\n  readonly id: string;\n  readonly caption: string;\n  readonly text: string;\n  readonly keywords: Array;\n  /**\n   * ISO time stamp string.\n   */\n  readonly timeStamp: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchParamsState.html":{"url":"interfaces/SearchParamsState.html","title":"interface - SearchParamsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SearchParamsState\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-store/slices/search-params/search-params-state.interface.ts\n        \n\n            \n                Description\n            \n            \n                Search/filter data.\nCould be part of notes list due to contains single property :).\nBut was moved to dedicated state slice to show how state should be composed\nfrom multiple parts.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        searchByKeywords\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        searchByKeywords\n                                    \n                                \n                                \n                                    \n                                        searchByKeywords:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/state-store/slices/search-params/search-params-state.interface.ts:8\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface SearchParamsState {\n  readonly searchByKeywords: Array;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            All\n                        \n                        \n                            All\n                        \n                        \n                            PartialNoteUpdates\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/state-store/slices/search-params/search-params.actions.ts\n    \n            \n                \n                    \n                        \n                            \n                            All\n                        \n                    \n                    \n                        \n                            All:     UpdateSearchByKeywords\n    \n                        \n                    \n                \n            \n    \n    src/app/state-store/slices/notes-list/notes-list.actions.ts\n    \n            \n                \n                    \n                        \n                            \n                            All\n                        \n                    \n                    \n                        \n                            All:     LoadNotesStart | LoadNotesSuccess | LoadNotesError | SelectNote | AddNote | UpdateNote | SaveNoteStart | SaveNoteSuccess | SaveNoteError | DeleteNoteStart | DeleteNoteSuccess | DeleteNoteError\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            PartialNoteUpdates\n                        \n                    \n                    \n                        \n                            PartialNoteUpdates:     Partial>\n    \n                        \n                    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
